
ldr_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000fb0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000fb0  00001024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000072c  00000000  00000000  0000102c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000072a  00000000  00000000  00001758  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61

0000001c <__do_copy_data>:
  1c:	10 e0       	ldi	r17, 0x00	; 0
  1e:	a0 e6       	ldi	r26, 0x60	; 96
  20:	b0 e0       	ldi	r27, 0x00	; 0
  22:	e0 eb       	ldi	r30, 0xB0	; 176
  24:	ff e0       	ldi	r31, 0x0F	; 15
  26:	02 c0       	rjmp	.+4      	; 0x2c <.do_copy_data_start>

00000028 <.do_copy_data_loop>:
  28:	05 90       	lpm	r0, Z+
  2a:	0d 92       	st	X+, r0

0000002c <.do_copy_data_start>:
  2c:	a8 36       	cpi	r26, 0x68	; 104
  2e:	b1 07       	cpc	r27, r17
  30:	d9 f7       	brne	.-10     	; 0x28 <.do_copy_data_loop>
  32:	33 d0       	rcall	.+102    	; 0x9a <main>
  34:	bb c7       	rjmp	.+3958   	; 0xfac <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <readAdc>:
#include <util/delay.h>
#define ADC_ENA_BIT 2 // use PB4 to enable ldr, pin 3
#define LED_BIT 1 // pin 6

uint16_t readAdc(uint8_t channel)
{
  38:	df 93       	push	r29
  3a:	cf 93       	push	r28
  3c:	0f 92       	push	r0
  3e:	cd b7       	in	r28, 0x3d	; 61
  40:	de b7       	in	r29, 0x3e	; 62
  42:	89 83       	std	Y+1, r24	; 0x01
	//select ADC must be 0-7
	channel &= 7;
  44:	89 81       	ldd	r24, Y+1	; 0x01
  46:	87 70       	andi	r24, 0x07	; 7
  48:	89 83       	std	Y+1, r24	; 0x01
	ADMUX |= channel;
  4a:	a7 e2       	ldi	r26, 0x27	; 39
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	e7 e2       	ldi	r30, 0x27	; 39
  50:	f0 e0       	ldi	r31, 0x00	; 0
  52:	90 81       	ld	r25, Z
  54:	89 81       	ldd	r24, Y+1	; 0x01
  56:	89 2b       	or	r24, r25
  58:	8c 93       	st	X, r24
	//start a conversion
	ADCSRA |= (1<<ADSC);
  5a:	a6 e2       	ldi	r26, 0x26	; 38
  5c:	b0 e0       	ldi	r27, 0x00	; 0
  5e:	e6 e2       	ldi	r30, 0x26	; 38
  60:	f0 e0       	ldi	r31, 0x00	; 0
  62:	80 81       	ld	r24, Z
  64:	80 64       	ori	r24, 0x40	; 64
  66:	8c 93       	st	X, r24

	while(ADCSRA & (1<<ADSC));
  68:	e6 e2       	ldi	r30, 0x26	; 38
  6a:	f0 e0       	ldi	r31, 0x00	; 0
  6c:	80 81       	ld	r24, Z
  6e:	88 2f       	mov	r24, r24
  70:	90 e0       	ldi	r25, 0x00	; 0
  72:	80 74       	andi	r24, 0x40	; 64
  74:	90 70       	andi	r25, 0x00	; 0
  76:	00 97       	sbiw	r24, 0x00	; 0
  78:	b9 f7       	brne	.-18     	; 0x68 <__SREG__+0x29>

	//clear ADIF by writing 1 to it
	//yes, this results in setting the bit to '0'.
	ADCSRA |= (1<<ADIF);
  7a:	a6 e2       	ldi	r26, 0x26	; 38
  7c:	b0 e0       	ldi	r27, 0x00	; 0
  7e:	e6 e2       	ldi	r30, 0x26	; 38
  80:	f0 e0       	ldi	r31, 0x00	; 0
  82:	80 81       	ld	r24, Z
  84:	80 61       	ori	r24, 0x10	; 16
  86:	8c 93       	st	X, r24

	return(ADCH);
  88:	e5 e2       	ldi	r30, 0x25	; 37
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 81       	ld	r24, Z
  8e:	88 2f       	mov	r24, r24
  90:	90 e0       	ldi	r25, 0x00	; 0
}
  92:	0f 90       	pop	r0
  94:	cf 91       	pop	r28
  96:	df 91       	pop	r29
  98:	08 95       	ret

0000009a <main>:

int main(void)
{
  9a:	df 93       	push	r29
  9c:	cf 93       	push	r28
  9e:	cd b7       	in	r28, 0x3d	; 61
  a0:	de b7       	in	r29, 0x3e	; 62
  a2:	eb 97       	sbiw	r28, 0x3b	; 59
  a4:	0f b6       	in	r0, 0x3f	; 63
  a6:	f8 94       	cli
  a8:	de bf       	out	0x3e, r29	; 62
  aa:	0f be       	out	0x3f, r0	; 63
  ac:	cd bf       	out	0x3d, r28	; 61
	uint8_t i = 0;
  ae:	1b ae       	std	Y+59, r1	; 0x3b
	DDRB |= (1 << LED_BIT)
  b0:	a7 e3       	ldi	r26, 0x37	; 55
  b2:	b0 e0       	ldi	r27, 0x00	; 0
  b4:	e7 e3       	ldi	r30, 0x37	; 55
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	86 60       	ori	r24, 0x06	; 6
  bc:	8c 93       	st	X, r24
	| (1 << ADC_ENA_BIT); //enable current for LDR voltage divider

	PORTB |= (1 << ADC_ENA_BIT); // power on teh voltage divider
  be:	a8 e3       	ldi	r26, 0x38	; 56
  c0:	b0 e0       	ldi	r27, 0x00	; 0
  c2:	e8 e3       	ldi	r30, 0x38	; 56
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	84 60       	ori	r24, 0x04	; 4
  ca:	8c 93       	st	X, r24


	//enable ADC and division factor of 8
	ADCSRA |= (1 << ADEN)| //enable ADC
  cc:	a6 e2       	ldi	r26, 0x26	; 38
  ce:	b0 e0       	ldi	r27, 0x00	; 0
  d0:	e6 e2       	ldi	r30, 0x26	; 38
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	87 68       	ori	r24, 0x87	; 135
  d8:	8c 93       	st	X, r24
	(1 << ADPS1)| (1 << ADPS2) | (1 << ADPS0);// presaler 128 -> 75K samples at 9.6 MHz

	// select ADC channel
	ADMUX |= (0 << REFS0)|// set aref=Vcc
  da:	a7 e2       	ldi	r26, 0x27	; 39
  dc:	b0 e0       	ldi	r27, 0x00	; 0
  de:	e7 e2       	ldi	r30, 0x27	; 39
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	82 62       	ori	r24, 0x22	; 34
  e6:	8c 93       	st	X, r24
	(1 << ADLAR)| //ADC output as 8-bit, left adjusted
	(1 << MUX1); //select channel 2

	//flash five times to signal on.
	for(i=0;i<5;i++){
  e8:	1b ae       	std	Y+59, r1	; 0x3b
  ea:	e9 c0       	rjmp	.+466    	; 0x2be <__stack+0x21f>
		PORTB |= (1 << LED_BIT); //ledbit set to on
  ec:	a8 e3       	ldi	r26, 0x38	; 56
  ee:	b0 e0       	ldi	r27, 0x00	; 0
  f0:	e8 e3       	ldi	r30, 0x38	; 56
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	82 60       	ori	r24, 0x02	; 2
  f8:	8c 93       	st	X, r24
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	aa e7       	ldi	r26, 0x7A	; 122
 100:	b3 e4       	ldi	r27, 0x43	; 67
 102:	8d ab       	std	Y+53, r24	; 0x35
 104:	9e ab       	std	Y+54, r25	; 0x36
 106:	af ab       	std	Y+55, r26	; 0x37
 108:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 10a:	6d a9       	ldd	r22, Y+53	; 0x35
 10c:	7e a9       	ldd	r23, Y+54	; 0x36
 10e:	8f a9       	ldd	r24, Y+55	; 0x37
 110:	98 ad       	ldd	r25, Y+56	; 0x38
 112:	20 e0       	ldi	r18, 0x00	; 0
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	46 e9       	ldi	r20, 0x96	; 150
 118:	53 e4       	ldi	r21, 0x43	; 67
 11a:	a4 d3       	rcall	.+1864   	; 0x864 <__mulsf3>
 11c:	dc 01       	movw	r26, r24
 11e:	cb 01       	movw	r24, r22
 120:	89 ab       	std	Y+49, r24	; 0x31
 122:	9a ab       	std	Y+50, r25	; 0x32
 124:	ab ab       	std	Y+51, r26	; 0x33
 126:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
 128:	69 a9       	ldd	r22, Y+49	; 0x31
 12a:	7a a9       	ldd	r23, Y+50	; 0x32
 12c:	8b a9       	ldd	r24, Y+51	; 0x33
 12e:	9c a9       	ldd	r25, Y+52	; 0x34
 130:	20 e0       	ldi	r18, 0x00	; 0
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	40 e8       	ldi	r20, 0x80	; 128
 136:	5f e3       	ldi	r21, 0x3F	; 63
 138:	e0 d4       	rcall	.+2496   	; 0xafa <__ltsf2>
 13a:	88 23       	and	r24, r24
 13c:	2c f4       	brge	.+10     	; 0x148 <__stack+0xa9>
		__ticks = 1;
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	98 ab       	std	Y+48, r25	; 0x30
 144:	8f a7       	std	Y+47, r24	; 0x2f
 146:	3b c0       	rjmp	.+118    	; 0x1be <__stack+0x11f>
	else if (__tmp > 65535)
 148:	69 a9       	ldd	r22, Y+49	; 0x31
 14a:	7a a9       	ldd	r23, Y+50	; 0x32
 14c:	8b a9       	ldd	r24, Y+51	; 0x33
 14e:	9c a9       	ldd	r25, Y+52	; 0x34
 150:	20 e0       	ldi	r18, 0x00	; 0
 152:	3f ef       	ldi	r19, 0xFF	; 255
 154:	4f e7       	ldi	r20, 0x7F	; 127
 156:	57 e4       	ldi	r21, 0x47	; 71
 158:	7a d4       	rcall	.+2292   	; 0xa4e <__gtsf2>
 15a:	18 16       	cp	r1, r24
 15c:	3c f5       	brge	.+78     	; 0x1ac <__stack+0x10d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 15e:	6d a9       	ldd	r22, Y+53	; 0x35
 160:	7e a9       	ldd	r23, Y+54	; 0x36
 162:	8f a9       	ldd	r24, Y+55	; 0x37
 164:	98 ad       	ldd	r25, Y+56	; 0x38
 166:	20 e0       	ldi	r18, 0x00	; 0
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	40 e2       	ldi	r20, 0x20	; 32
 16c:	51 e4       	ldi	r21, 0x41	; 65
 16e:	7a d3       	rcall	.+1780   	; 0x864 <__mulsf3>
 170:	dc 01       	movw	r26, r24
 172:	cb 01       	movw	r24, r22
 174:	bc 01       	movw	r22, r24
 176:	cd 01       	movw	r24, r26
 178:	b1 d1       	rcall	.+866    	; 0x4dc <__fixunssfsi>
 17a:	dc 01       	movw	r26, r24
 17c:	cb 01       	movw	r24, r22
 17e:	98 ab       	std	Y+48, r25	; 0x30
 180:	8f a7       	std	Y+47, r24	; 0x2f
 182:	0f c0       	rjmp	.+30     	; 0x1a2 <__stack+0x103>
 184:	8e e1       	ldi	r24, 0x1E	; 30
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	9e a7       	std	Y+46, r25	; 0x2e
 18a:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 18c:	8d a5       	ldd	r24, Y+45	; 0x2d
 18e:	9e a5       	ldd	r25, Y+46	; 0x2e
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <__stack+0xf1>
 194:	9e a7       	std	Y+46, r25	; 0x2e
 196:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 198:	8f a5       	ldd	r24, Y+47	; 0x2f
 19a:	98 a9       	ldd	r25, Y+48	; 0x30
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	98 ab       	std	Y+48, r25	; 0x30
 1a0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1a2:	8f a5       	ldd	r24, Y+47	; 0x2f
 1a4:	98 a9       	ldd	r25, Y+48	; 0x30
 1a6:	00 97       	sbiw	r24, 0x00	; 0
 1a8:	69 f7       	brne	.-38     	; 0x184 <__stack+0xe5>
 1aa:	13 c0       	rjmp	.+38     	; 0x1d2 <__stack+0x133>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1ac:	69 a9       	ldd	r22, Y+49	; 0x31
 1ae:	7a a9       	ldd	r23, Y+50	; 0x32
 1b0:	8b a9       	ldd	r24, Y+51	; 0x33
 1b2:	9c a9       	ldd	r25, Y+52	; 0x34
 1b4:	93 d1       	rcall	.+806    	; 0x4dc <__fixunssfsi>
 1b6:	dc 01       	movw	r26, r24
 1b8:	cb 01       	movw	r24, r22
 1ba:	98 ab       	std	Y+48, r25	; 0x30
 1bc:	8f a7       	std	Y+47, r24	; 0x2f
 1be:	8f a5       	ldd	r24, Y+47	; 0x2f
 1c0:	98 a9       	ldd	r25, Y+48	; 0x30
 1c2:	9c a7       	std	Y+44, r25	; 0x2c
 1c4:	8b a7       	std	Y+43, r24	; 0x2b
 1c6:	8b a5       	ldd	r24, Y+43	; 0x2b
 1c8:	9c a5       	ldd	r25, Y+44	; 0x2c
 1ca:	01 97       	sbiw	r24, 0x01	; 1
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <__stack+0x12b>
 1ce:	9c a7       	std	Y+44, r25	; 0x2c
 1d0:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(250);
		PORTB &= ~(1 << LED_BIT); //ledbit set to off
 1d2:	a8 e3       	ldi	r26, 0x38	; 56
 1d4:	b0 e0       	ldi	r27, 0x00	; 0
 1d6:	e8 e3       	ldi	r30, 0x38	; 56
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	8d 7f       	andi	r24, 0xFD	; 253
 1de:	8c 93       	st	X, r24
 1e0:	80 e0       	ldi	r24, 0x00	; 0
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	aa e7       	ldi	r26, 0x7A	; 122
 1e6:	b3 e4       	ldi	r27, 0x43	; 67
 1e8:	8f a3       	std	Y+39, r24	; 0x27
 1ea:	98 a7       	std	Y+40, r25	; 0x28
 1ec:	a9 a7       	std	Y+41, r26	; 0x29
 1ee:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 1f0:	6f a1       	ldd	r22, Y+39	; 0x27
 1f2:	78 a5       	ldd	r23, Y+40	; 0x28
 1f4:	89 a5       	ldd	r24, Y+41	; 0x29
 1f6:	9a a5       	ldd	r25, Y+42	; 0x2a
 1f8:	20 e0       	ldi	r18, 0x00	; 0
 1fa:	30 e0       	ldi	r19, 0x00	; 0
 1fc:	46 e9       	ldi	r20, 0x96	; 150
 1fe:	53 e4       	ldi	r21, 0x43	; 67
 200:	31 d3       	rcall	.+1634   	; 0x864 <__mulsf3>
 202:	dc 01       	movw	r26, r24
 204:	cb 01       	movw	r24, r22
 206:	8b a3       	std	Y+35, r24	; 0x23
 208:	9c a3       	std	Y+36, r25	; 0x24
 20a:	ad a3       	std	Y+37, r26	; 0x25
 20c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
 20e:	6b a1       	ldd	r22, Y+35	; 0x23
 210:	7c a1       	ldd	r23, Y+36	; 0x24
 212:	8d a1       	ldd	r24, Y+37	; 0x25
 214:	9e a1       	ldd	r25, Y+38	; 0x26
 216:	20 e0       	ldi	r18, 0x00	; 0
 218:	30 e0       	ldi	r19, 0x00	; 0
 21a:	40 e8       	ldi	r20, 0x80	; 128
 21c:	5f e3       	ldi	r21, 0x3F	; 63
 21e:	6d d4       	rcall	.+2266   	; 0xafa <__ltsf2>
 220:	88 23       	and	r24, r24
 222:	2c f4       	brge	.+10     	; 0x22e <__stack+0x18f>
		__ticks = 1;
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	9a a3       	std	Y+34, r25	; 0x22
 22a:	89 a3       	std	Y+33, r24	; 0x21
 22c:	3b c0       	rjmp	.+118    	; 0x2a4 <__stack+0x205>
	else if (__tmp > 65535)
 22e:	6b a1       	ldd	r22, Y+35	; 0x23
 230:	7c a1       	ldd	r23, Y+36	; 0x24
 232:	8d a1       	ldd	r24, Y+37	; 0x25
 234:	9e a1       	ldd	r25, Y+38	; 0x26
 236:	20 e0       	ldi	r18, 0x00	; 0
 238:	3f ef       	ldi	r19, 0xFF	; 255
 23a:	4f e7       	ldi	r20, 0x7F	; 127
 23c:	57 e4       	ldi	r21, 0x47	; 71
 23e:	07 d4       	rcall	.+2062   	; 0xa4e <__gtsf2>
 240:	18 16       	cp	r1, r24
 242:	3c f5       	brge	.+78     	; 0x292 <__stack+0x1f3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 244:	6f a1       	ldd	r22, Y+39	; 0x27
 246:	78 a5       	ldd	r23, Y+40	; 0x28
 248:	89 a5       	ldd	r24, Y+41	; 0x29
 24a:	9a a5       	ldd	r25, Y+42	; 0x2a
 24c:	20 e0       	ldi	r18, 0x00	; 0
 24e:	30 e0       	ldi	r19, 0x00	; 0
 250:	40 e2       	ldi	r20, 0x20	; 32
 252:	51 e4       	ldi	r21, 0x41	; 65
 254:	07 d3       	rcall	.+1550   	; 0x864 <__mulsf3>
 256:	dc 01       	movw	r26, r24
 258:	cb 01       	movw	r24, r22
 25a:	bc 01       	movw	r22, r24
 25c:	cd 01       	movw	r24, r26
 25e:	3e d1       	rcall	.+636    	; 0x4dc <__fixunssfsi>
 260:	dc 01       	movw	r26, r24
 262:	cb 01       	movw	r24, r22
 264:	9a a3       	std	Y+34, r25	; 0x22
 266:	89 a3       	std	Y+33, r24	; 0x21
 268:	0f c0       	rjmp	.+30     	; 0x288 <__stack+0x1e9>
 26a:	8e e1       	ldi	r24, 0x1E	; 30
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	98 a3       	std	Y+32, r25	; 0x20
 270:	8f 8f       	std	Y+31, r24	; 0x1f
 272:	8f 8d       	ldd	r24, Y+31	; 0x1f
 274:	98 a1       	ldd	r25, Y+32	; 0x20
 276:	01 97       	sbiw	r24, 0x01	; 1
 278:	f1 f7       	brne	.-4      	; 0x276 <__stack+0x1d7>
 27a:	98 a3       	std	Y+32, r25	; 0x20
 27c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 27e:	89 a1       	ldd	r24, Y+33	; 0x21
 280:	9a a1       	ldd	r25, Y+34	; 0x22
 282:	01 97       	sbiw	r24, 0x01	; 1
 284:	9a a3       	std	Y+34, r25	; 0x22
 286:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 288:	89 a1       	ldd	r24, Y+33	; 0x21
 28a:	9a a1       	ldd	r25, Y+34	; 0x22
 28c:	00 97       	sbiw	r24, 0x00	; 0
 28e:	69 f7       	brne	.-38     	; 0x26a <__stack+0x1cb>
 290:	13 c0       	rjmp	.+38     	; 0x2b8 <__stack+0x219>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 292:	6b a1       	ldd	r22, Y+35	; 0x23
 294:	7c a1       	ldd	r23, Y+36	; 0x24
 296:	8d a1       	ldd	r24, Y+37	; 0x25
 298:	9e a1       	ldd	r25, Y+38	; 0x26
 29a:	20 d1       	rcall	.+576    	; 0x4dc <__fixunssfsi>
 29c:	dc 01       	movw	r26, r24
 29e:	cb 01       	movw	r24, r22
 2a0:	9a a3       	std	Y+34, r25	; 0x22
 2a2:	89 a3       	std	Y+33, r24	; 0x21
 2a4:	89 a1       	ldd	r24, Y+33	; 0x21
 2a6:	9a a1       	ldd	r25, Y+34	; 0x22
 2a8:	9e 8f       	std	Y+30, r25	; 0x1e
 2aa:	8d 8f       	std	Y+29, r24	; 0x1d
 2ac:	8d 8d       	ldd	r24, Y+29	; 0x1d
 2ae:	9e 8d       	ldd	r25, Y+30	; 0x1e
 2b0:	01 97       	sbiw	r24, 0x01	; 1
 2b2:	f1 f7       	brne	.-4      	; 0x2b0 <__stack+0x211>
 2b4:	9e 8f       	std	Y+30, r25	; 0x1e
 2b6:	8d 8f       	std	Y+29, r24	; 0x1d
	ADMUX |= (0 << REFS0)|// set aref=Vcc
	(1 << ADLAR)| //ADC output as 8-bit, left adjusted
	(1 << MUX1); //select channel 2

	//flash five times to signal on.
	for(i=0;i<5;i++){
 2b8:	8b ad       	ldd	r24, Y+59	; 0x3b
 2ba:	8f 5f       	subi	r24, 0xFF	; 255
 2bc:	8b af       	std	Y+59, r24	; 0x3b
 2be:	8b ad       	ldd	r24, Y+59	; 0x3b
 2c0:	85 30       	cpi	r24, 0x05	; 5
 2c2:	08 f4       	brcc	.+2      	; 0x2c6 <__stack+0x227>
 2c4:	13 cf       	rjmp	.-474    	; 0xec <__stack+0x4d>
	}

	uint16_t adcResult;

	//grab the first reading and discard
	adcResult = readAdc(ADC_ENA_BIT);
 2c6:	82 e0       	ldi	r24, 0x02	; 2
 2c8:	b7 de       	rcall	.-658    	; 0x38 <readAdc>
 2ca:	9a af       	std	Y+58, r25	; 0x3a
 2cc:	89 af       	std	Y+57, r24	; 0x39
	while (1)
	{
		adcResult = readAdc(ADC_ENA_BIT);
 2ce:	82 e0       	ldi	r24, 0x02	; 2
 2d0:	b3 de       	rcall	.-666    	; 0x38 <readAdc>
 2d2:	9a af       	std	Y+58, r25	; 0x3a
 2d4:	89 af       	std	Y+57, r24	; 0x39

		//turn on the led
		PORTB |= (1 << LED_BIT);
 2d6:	a8 e3       	ldi	r26, 0x38	; 56
 2d8:	b0 e0       	ldi	r27, 0x00	; 0
 2da:	e8 e3       	ldi	r30, 0x38	; 56
 2dc:	f0 e0       	ldi	r31, 0x00	; 0
 2de:	80 81       	ld	r24, Z
 2e0:	82 60       	ori	r24, 0x02	; 2
 2e2:	8c 93       	st	X, r24

		for(i=0; i < adcResult; i++){
 2e4:	1b ae       	std	Y+59, r1	; 0x3b
 2e6:	6f c0       	rjmp	.+222    	; 0x3c6 <__stack+0x327>
 2e8:	80 e0       	ldi	r24, 0x00	; 0
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	a0 e2       	ldi	r26, 0x20	; 32
 2ee:	b1 e4       	ldi	r27, 0x41	; 65
 2f0:	89 8f       	std	Y+25, r24	; 0x19
 2f2:	9a 8f       	std	Y+26, r25	; 0x1a
 2f4:	ab 8f       	std	Y+27, r26	; 0x1b
 2f6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 2f8:	69 8d       	ldd	r22, Y+25	; 0x19
 2fa:	7a 8d       	ldd	r23, Y+26	; 0x1a
 2fc:	8b 8d       	ldd	r24, Y+27	; 0x1b
 2fe:	9c 8d       	ldd	r25, Y+28	; 0x1c
 300:	20 e0       	ldi	r18, 0x00	; 0
 302:	30 e0       	ldi	r19, 0x00	; 0
 304:	46 e9       	ldi	r20, 0x96	; 150
 306:	53 e4       	ldi	r21, 0x43	; 67
 308:	ad d2       	rcall	.+1370   	; 0x864 <__mulsf3>
 30a:	dc 01       	movw	r26, r24
 30c:	cb 01       	movw	r24, r22
 30e:	8d 8b       	std	Y+21, r24	; 0x15
 310:	9e 8b       	std	Y+22, r25	; 0x16
 312:	af 8b       	std	Y+23, r26	; 0x17
 314:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
 316:	6d 89       	ldd	r22, Y+21	; 0x15
 318:	7e 89       	ldd	r23, Y+22	; 0x16
 31a:	8f 89       	ldd	r24, Y+23	; 0x17
 31c:	98 8d       	ldd	r25, Y+24	; 0x18
 31e:	20 e0       	ldi	r18, 0x00	; 0
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	40 e8       	ldi	r20, 0x80	; 128
 324:	5f e3       	ldi	r21, 0x3F	; 63
 326:	e9 d3       	rcall	.+2002   	; 0xafa <__ltsf2>
 328:	88 23       	and	r24, r24
 32a:	2c f4       	brge	.+10     	; 0x336 <__stack+0x297>
		__ticks = 1;
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	9c 8b       	std	Y+20, r25	; 0x14
 332:	8b 8b       	std	Y+19, r24	; 0x13
 334:	3b c0       	rjmp	.+118    	; 0x3ac <__stack+0x30d>
	else if (__tmp > 65535)
 336:	6d 89       	ldd	r22, Y+21	; 0x15
 338:	7e 89       	ldd	r23, Y+22	; 0x16
 33a:	8f 89       	ldd	r24, Y+23	; 0x17
 33c:	98 8d       	ldd	r25, Y+24	; 0x18
 33e:	20 e0       	ldi	r18, 0x00	; 0
 340:	3f ef       	ldi	r19, 0xFF	; 255
 342:	4f e7       	ldi	r20, 0x7F	; 127
 344:	57 e4       	ldi	r21, 0x47	; 71
 346:	83 d3       	rcall	.+1798   	; 0xa4e <__gtsf2>
 348:	18 16       	cp	r1, r24
 34a:	3c f5       	brge	.+78     	; 0x39a <__stack+0x2fb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 34c:	69 8d       	ldd	r22, Y+25	; 0x19
 34e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 350:	8b 8d       	ldd	r24, Y+27	; 0x1b
 352:	9c 8d       	ldd	r25, Y+28	; 0x1c
 354:	20 e0       	ldi	r18, 0x00	; 0
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	40 e2       	ldi	r20, 0x20	; 32
 35a:	51 e4       	ldi	r21, 0x41	; 65
 35c:	83 d2       	rcall	.+1286   	; 0x864 <__mulsf3>
 35e:	dc 01       	movw	r26, r24
 360:	cb 01       	movw	r24, r22
 362:	bc 01       	movw	r22, r24
 364:	cd 01       	movw	r24, r26
 366:	ba d0       	rcall	.+372    	; 0x4dc <__fixunssfsi>
 368:	dc 01       	movw	r26, r24
 36a:	cb 01       	movw	r24, r22
 36c:	9c 8b       	std	Y+20, r25	; 0x14
 36e:	8b 8b       	std	Y+19, r24	; 0x13
 370:	0f c0       	rjmp	.+30     	; 0x390 <__stack+0x2f1>
 372:	8e e1       	ldi	r24, 0x1E	; 30
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	9a 8b       	std	Y+18, r25	; 0x12
 378:	89 8b       	std	Y+17, r24	; 0x11
 37a:	89 89       	ldd	r24, Y+17	; 0x11
 37c:	9a 89       	ldd	r25, Y+18	; 0x12
 37e:	01 97       	sbiw	r24, 0x01	; 1
 380:	f1 f7       	brne	.-4      	; 0x37e <__stack+0x2df>
 382:	9a 8b       	std	Y+18, r25	; 0x12
 384:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 386:	8b 89       	ldd	r24, Y+19	; 0x13
 388:	9c 89       	ldd	r25, Y+20	; 0x14
 38a:	01 97       	sbiw	r24, 0x01	; 1
 38c:	9c 8b       	std	Y+20, r25	; 0x14
 38e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 390:	8b 89       	ldd	r24, Y+19	; 0x13
 392:	9c 89       	ldd	r25, Y+20	; 0x14
 394:	00 97       	sbiw	r24, 0x00	; 0
 396:	69 f7       	brne	.-38     	; 0x372 <__stack+0x2d3>
 398:	13 c0       	rjmp	.+38     	; 0x3c0 <__stack+0x321>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 39a:	6d 89       	ldd	r22, Y+21	; 0x15
 39c:	7e 89       	ldd	r23, Y+22	; 0x16
 39e:	8f 89       	ldd	r24, Y+23	; 0x17
 3a0:	98 8d       	ldd	r25, Y+24	; 0x18
 3a2:	9c d0       	rcall	.+312    	; 0x4dc <__fixunssfsi>
 3a4:	dc 01       	movw	r26, r24
 3a6:	cb 01       	movw	r24, r22
 3a8:	9c 8b       	std	Y+20, r25	; 0x14
 3aa:	8b 8b       	std	Y+19, r24	; 0x13
 3ac:	8b 89       	ldd	r24, Y+19	; 0x13
 3ae:	9c 89       	ldd	r25, Y+20	; 0x14
 3b0:	98 8b       	std	Y+16, r25	; 0x10
 3b2:	8f 87       	std	Y+15, r24	; 0x0f
 3b4:	8f 85       	ldd	r24, Y+15	; 0x0f
 3b6:	98 89       	ldd	r25, Y+16	; 0x10
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <__stack+0x319>
 3bc:	98 8b       	std	Y+16, r25	; 0x10
 3be:	8f 87       	std	Y+15, r24	; 0x0f
 3c0:	8b ad       	ldd	r24, Y+59	; 0x3b
 3c2:	8f 5f       	subi	r24, 0xFF	; 255
 3c4:	8b af       	std	Y+59, r24	; 0x3b
 3c6:	8b ad       	ldd	r24, Y+59	; 0x3b
 3c8:	28 2f       	mov	r18, r24
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	89 ad       	ldd	r24, Y+57	; 0x39
 3ce:	9a ad       	ldd	r25, Y+58	; 0x3a
 3d0:	28 17       	cp	r18, r24
 3d2:	39 07       	cpc	r19, r25
 3d4:	08 f4       	brcc	.+2      	; 0x3d8 <__stack+0x339>
 3d6:	88 cf       	rjmp	.-240    	; 0x2e8 <__stack+0x249>
			_delay_ms(10);
		}

		//turn off the led
		PORTB &= ~(1 << LED_BIT);
 3d8:	a8 e3       	ldi	r26, 0x38	; 56
 3da:	b0 e0       	ldi	r27, 0x00	; 0
 3dc:	e8 e3       	ldi	r30, 0x38	; 56
 3de:	f0 e0       	ldi	r31, 0x00	; 0
 3e0:	80 81       	ld	r24, Z
 3e2:	8d 7f       	andi	r24, 0xFD	; 253
 3e4:	8c 93       	st	X, r24
		for(i=0; i < adcResult; i++){
 3e6:	1b ae       	std	Y+59, r1	; 0x3b
 3e8:	6f c0       	rjmp	.+222    	; 0x4c8 <__stack+0x429>
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	a0 e2       	ldi	r26, 0x20	; 32
 3f0:	b1 e4       	ldi	r27, 0x41	; 65
 3f2:	8b 87       	std	Y+11, r24	; 0x0b
 3f4:	9c 87       	std	Y+12, r25	; 0x0c
 3f6:	ad 87       	std	Y+13, r26	; 0x0d
 3f8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 3fa:	6b 85       	ldd	r22, Y+11	; 0x0b
 3fc:	7c 85       	ldd	r23, Y+12	; 0x0c
 3fe:	8d 85       	ldd	r24, Y+13	; 0x0d
 400:	9e 85       	ldd	r25, Y+14	; 0x0e
 402:	20 e0       	ldi	r18, 0x00	; 0
 404:	30 e0       	ldi	r19, 0x00	; 0
 406:	46 e9       	ldi	r20, 0x96	; 150
 408:	53 e4       	ldi	r21, 0x43	; 67
 40a:	2c d2       	rcall	.+1112   	; 0x864 <__mulsf3>
 40c:	dc 01       	movw	r26, r24
 40e:	cb 01       	movw	r24, r22
 410:	8f 83       	std	Y+7, r24	; 0x07
 412:	98 87       	std	Y+8, r25	; 0x08
 414:	a9 87       	std	Y+9, r26	; 0x09
 416:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 418:	6f 81       	ldd	r22, Y+7	; 0x07
 41a:	78 85       	ldd	r23, Y+8	; 0x08
 41c:	89 85       	ldd	r24, Y+9	; 0x09
 41e:	9a 85       	ldd	r25, Y+10	; 0x0a
 420:	20 e0       	ldi	r18, 0x00	; 0
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	40 e8       	ldi	r20, 0x80	; 128
 426:	5f e3       	ldi	r21, 0x3F	; 63
 428:	68 d3       	rcall	.+1744   	; 0xafa <__ltsf2>
 42a:	88 23       	and	r24, r24
 42c:	2c f4       	brge	.+10     	; 0x438 <__stack+0x399>
		__ticks = 1;
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	9e 83       	std	Y+6, r25	; 0x06
 434:	8d 83       	std	Y+5, r24	; 0x05
 436:	3b c0       	rjmp	.+118    	; 0x4ae <__stack+0x40f>
	else if (__tmp > 65535)
 438:	6f 81       	ldd	r22, Y+7	; 0x07
 43a:	78 85       	ldd	r23, Y+8	; 0x08
 43c:	89 85       	ldd	r24, Y+9	; 0x09
 43e:	9a 85       	ldd	r25, Y+10	; 0x0a
 440:	20 e0       	ldi	r18, 0x00	; 0
 442:	3f ef       	ldi	r19, 0xFF	; 255
 444:	4f e7       	ldi	r20, 0x7F	; 127
 446:	57 e4       	ldi	r21, 0x47	; 71
 448:	02 d3       	rcall	.+1540   	; 0xa4e <__gtsf2>
 44a:	18 16       	cp	r1, r24
 44c:	3c f5       	brge	.+78     	; 0x49c <__stack+0x3fd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 44e:	6b 85       	ldd	r22, Y+11	; 0x0b
 450:	7c 85       	ldd	r23, Y+12	; 0x0c
 452:	8d 85       	ldd	r24, Y+13	; 0x0d
 454:	9e 85       	ldd	r25, Y+14	; 0x0e
 456:	20 e0       	ldi	r18, 0x00	; 0
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	40 e2       	ldi	r20, 0x20	; 32
 45c:	51 e4       	ldi	r21, 0x41	; 65
 45e:	02 d2       	rcall	.+1028   	; 0x864 <__mulsf3>
 460:	dc 01       	movw	r26, r24
 462:	cb 01       	movw	r24, r22
 464:	bc 01       	movw	r22, r24
 466:	cd 01       	movw	r24, r26
 468:	39 d0       	rcall	.+114    	; 0x4dc <__fixunssfsi>
 46a:	dc 01       	movw	r26, r24
 46c:	cb 01       	movw	r24, r22
 46e:	9e 83       	std	Y+6, r25	; 0x06
 470:	8d 83       	std	Y+5, r24	; 0x05
 472:	0f c0       	rjmp	.+30     	; 0x492 <__stack+0x3f3>
 474:	8e e1       	ldi	r24, 0x1E	; 30
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	9c 83       	std	Y+4, r25	; 0x04
 47a:	8b 83       	std	Y+3, r24	; 0x03
 47c:	8b 81       	ldd	r24, Y+3	; 0x03
 47e:	9c 81       	ldd	r25, Y+4	; 0x04
 480:	01 97       	sbiw	r24, 0x01	; 1
 482:	f1 f7       	brne	.-4      	; 0x480 <__stack+0x3e1>
 484:	9c 83       	std	Y+4, r25	; 0x04
 486:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 488:	8d 81       	ldd	r24, Y+5	; 0x05
 48a:	9e 81       	ldd	r25, Y+6	; 0x06
 48c:	01 97       	sbiw	r24, 0x01	; 1
 48e:	9e 83       	std	Y+6, r25	; 0x06
 490:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 492:	8d 81       	ldd	r24, Y+5	; 0x05
 494:	9e 81       	ldd	r25, Y+6	; 0x06
 496:	00 97       	sbiw	r24, 0x00	; 0
 498:	69 f7       	brne	.-38     	; 0x474 <__stack+0x3d5>
 49a:	13 c0       	rjmp	.+38     	; 0x4c2 <__stack+0x423>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 49c:	6f 81       	ldd	r22, Y+7	; 0x07
 49e:	78 85       	ldd	r23, Y+8	; 0x08
 4a0:	89 85       	ldd	r24, Y+9	; 0x09
 4a2:	9a 85       	ldd	r25, Y+10	; 0x0a
 4a4:	1b d0       	rcall	.+54     	; 0x4dc <__fixunssfsi>
 4a6:	dc 01       	movw	r26, r24
 4a8:	cb 01       	movw	r24, r22
 4aa:	9e 83       	std	Y+6, r25	; 0x06
 4ac:	8d 83       	std	Y+5, r24	; 0x05
 4ae:	8d 81       	ldd	r24, Y+5	; 0x05
 4b0:	9e 81       	ldd	r25, Y+6	; 0x06
 4b2:	9a 83       	std	Y+2, r25	; 0x02
 4b4:	89 83       	std	Y+1, r24	; 0x01
 4b6:	89 81       	ldd	r24, Y+1	; 0x01
 4b8:	9a 81       	ldd	r25, Y+2	; 0x02
 4ba:	01 97       	sbiw	r24, 0x01	; 1
 4bc:	f1 f7       	brne	.-4      	; 0x4ba <__stack+0x41b>
 4be:	9a 83       	std	Y+2, r25	; 0x02
 4c0:	89 83       	std	Y+1, r24	; 0x01
 4c2:	8b ad       	ldd	r24, Y+59	; 0x3b
 4c4:	8f 5f       	subi	r24, 0xFF	; 255
 4c6:	8b af       	std	Y+59, r24	; 0x3b
 4c8:	8b ad       	ldd	r24, Y+59	; 0x3b
 4ca:	28 2f       	mov	r18, r24
 4cc:	30 e0       	ldi	r19, 0x00	; 0
 4ce:	89 ad       	ldd	r24, Y+57	; 0x39
 4d0:	9a ad       	ldd	r25, Y+58	; 0x3a
 4d2:	28 17       	cp	r18, r24
 4d4:	39 07       	cpc	r19, r25
 4d6:	08 f4       	brcc	.+2      	; 0x4da <__stack+0x43b>
 4d8:	88 cf       	rjmp	.-240    	; 0x3ea <__stack+0x34b>
 4da:	f9 ce       	rjmp	.-526    	; 0x2ce <__stack+0x22f>

000004dc <__fixunssfsi>:
 4dc:	ef 92       	push	r14
 4de:	ff 92       	push	r15
 4e0:	0f 93       	push	r16
 4e2:	1f 93       	push	r17
 4e4:	7b 01       	movw	r14, r22
 4e6:	8c 01       	movw	r16, r24
 4e8:	20 e0       	ldi	r18, 0x00	; 0
 4ea:	30 e0       	ldi	r19, 0x00	; 0
 4ec:	40 e0       	ldi	r20, 0x00	; 0
 4ee:	5f e4       	ldi	r21, 0x4F	; 79
 4f0:	d9 d2       	rcall	.+1458   	; 0xaa4 <__gesf2>
 4f2:	88 23       	and	r24, r24
 4f4:	7c f0       	brlt	.+30     	; 0x514 <__fixunssfsi+0x38>
 4f6:	c8 01       	movw	r24, r16
 4f8:	b7 01       	movw	r22, r14
 4fa:	20 e0       	ldi	r18, 0x00	; 0
 4fc:	30 e0       	ldi	r19, 0x00	; 0
 4fe:	40 e0       	ldi	r20, 0x00	; 0
 500:	5f e4       	ldi	r21, 0x4F	; 79
 502:	5e d1       	rcall	.+700    	; 0x7c0 <__subsf3>
 504:	25 d3       	rcall	.+1610   	; 0xb50 <__fixsfsi>
 506:	9b 01       	movw	r18, r22
 508:	ac 01       	movw	r20, r24
 50a:	20 50       	subi	r18, 0x00	; 0
 50c:	30 40       	sbci	r19, 0x00	; 0
 50e:	40 40       	sbci	r20, 0x00	; 0
 510:	50 48       	sbci	r21, 0x80	; 128
 512:	05 c0       	rjmp	.+10     	; 0x51e <__fixunssfsi+0x42>
 514:	c8 01       	movw	r24, r16
 516:	b7 01       	movw	r22, r14
 518:	1b d3       	rcall	.+1590   	; 0xb50 <__fixsfsi>
 51a:	9b 01       	movw	r18, r22
 51c:	ac 01       	movw	r20, r24
 51e:	b9 01       	movw	r22, r18
 520:	ca 01       	movw	r24, r20
 522:	1f 91       	pop	r17
 524:	0f 91       	pop	r16
 526:	ff 90       	pop	r15
 528:	ef 90       	pop	r14
 52a:	08 95       	ret

0000052c <_fpadd_parts>:
 52c:	a0 e0       	ldi	r26, 0x00	; 0
 52e:	b0 e0       	ldi	r27, 0x00	; 0
 530:	eb e9       	ldi	r30, 0x9B	; 155
 532:	f2 e0       	ldi	r31, 0x02	; 2
 534:	04 c5       	rjmp	.+2568   	; 0xf3e <__prologue_saves__>
 536:	dc 01       	movw	r26, r24
 538:	2b 01       	movw	r4, r22
 53a:	fa 01       	movw	r30, r20
 53c:	9c 91       	ld	r25, X
 53e:	92 30       	cpi	r25, 0x02	; 2
 540:	08 f4       	brcc	.+2      	; 0x544 <_fpadd_parts+0x18>
 542:	39 c1       	rjmp	.+626    	; 0x7b6 <_fpadd_parts+0x28a>
 544:	eb 01       	movw	r28, r22
 546:	88 81       	ld	r24, Y
 548:	82 30       	cpi	r24, 0x02	; 2
 54a:	08 f4       	brcc	.+2      	; 0x54e <_fpadd_parts+0x22>
 54c:	33 c1       	rjmp	.+614    	; 0x7b4 <_fpadd_parts+0x288>
 54e:	94 30       	cpi	r25, 0x04	; 4
 550:	69 f4       	brne	.+26     	; 0x56c <_fpadd_parts+0x40>
 552:	84 30       	cpi	r24, 0x04	; 4
 554:	09 f0       	breq	.+2      	; 0x558 <_fpadd_parts+0x2c>
 556:	2f c1       	rjmp	.+606    	; 0x7b6 <_fpadd_parts+0x28a>
 558:	11 96       	adiw	r26, 0x01	; 1
 55a:	9c 91       	ld	r25, X
 55c:	11 97       	sbiw	r26, 0x01	; 1
 55e:	89 81       	ldd	r24, Y+1	; 0x01
 560:	98 17       	cp	r25, r24
 562:	09 f4       	brne	.+2      	; 0x566 <_fpadd_parts+0x3a>
 564:	28 c1       	rjmp	.+592    	; 0x7b6 <_fpadd_parts+0x28a>
 566:	a0 e6       	ldi	r26, 0x60	; 96
 568:	b0 e0       	ldi	r27, 0x00	; 0
 56a:	25 c1       	rjmp	.+586    	; 0x7b6 <_fpadd_parts+0x28a>
 56c:	84 30       	cpi	r24, 0x04	; 4
 56e:	09 f4       	brne	.+2      	; 0x572 <_fpadd_parts+0x46>
 570:	21 c1       	rjmp	.+578    	; 0x7b4 <_fpadd_parts+0x288>
 572:	82 30       	cpi	r24, 0x02	; 2
 574:	a9 f4       	brne	.+42     	; 0x5a0 <_fpadd_parts+0x74>
 576:	92 30       	cpi	r25, 0x02	; 2
 578:	09 f0       	breq	.+2      	; 0x57c <_fpadd_parts+0x50>
 57a:	1d c1       	rjmp	.+570    	; 0x7b6 <_fpadd_parts+0x28a>
 57c:	9a 01       	movw	r18, r20
 57e:	ad 01       	movw	r20, r26
 580:	88 e0       	ldi	r24, 0x08	; 8
 582:	ea 01       	movw	r28, r20
 584:	09 90       	ld	r0, Y+
 586:	ae 01       	movw	r20, r28
 588:	e9 01       	movw	r28, r18
 58a:	09 92       	st	Y+, r0
 58c:	9e 01       	movw	r18, r28
 58e:	81 50       	subi	r24, 0x01	; 1
 590:	c1 f7       	brne	.-16     	; 0x582 <_fpadd_parts+0x56>
 592:	e2 01       	movw	r28, r4
 594:	89 81       	ldd	r24, Y+1	; 0x01
 596:	11 96       	adiw	r26, 0x01	; 1
 598:	9c 91       	ld	r25, X
 59a:	89 23       	and	r24, r25
 59c:	81 83       	std	Z+1, r24	; 0x01
 59e:	08 c1       	rjmp	.+528    	; 0x7b0 <_fpadd_parts+0x284>
 5a0:	92 30       	cpi	r25, 0x02	; 2
 5a2:	09 f4       	brne	.+2      	; 0x5a6 <_fpadd_parts+0x7a>
 5a4:	07 c1       	rjmp	.+526    	; 0x7b4 <_fpadd_parts+0x288>
 5a6:	12 96       	adiw	r26, 0x02	; 2
 5a8:	2d 90       	ld	r2, X+
 5aa:	3c 90       	ld	r3, X
 5ac:	13 97       	sbiw	r26, 0x03	; 3
 5ae:	eb 01       	movw	r28, r22
 5b0:	8a 81       	ldd	r24, Y+2	; 0x02
 5b2:	9b 81       	ldd	r25, Y+3	; 0x03
 5b4:	14 96       	adiw	r26, 0x04	; 4
 5b6:	ad 90       	ld	r10, X+
 5b8:	bd 90       	ld	r11, X+
 5ba:	cd 90       	ld	r12, X+
 5bc:	dc 90       	ld	r13, X
 5be:	17 97       	sbiw	r26, 0x07	; 7
 5c0:	ec 80       	ldd	r14, Y+4	; 0x04
 5c2:	fd 80       	ldd	r15, Y+5	; 0x05
 5c4:	0e 81       	ldd	r16, Y+6	; 0x06
 5c6:	1f 81       	ldd	r17, Y+7	; 0x07
 5c8:	91 01       	movw	r18, r2
 5ca:	28 1b       	sub	r18, r24
 5cc:	39 0b       	sbc	r19, r25
 5ce:	b9 01       	movw	r22, r18
 5d0:	37 ff       	sbrs	r19, 7
 5d2:	04 c0       	rjmp	.+8      	; 0x5dc <_fpadd_parts+0xb0>
 5d4:	66 27       	eor	r22, r22
 5d6:	77 27       	eor	r23, r23
 5d8:	62 1b       	sub	r22, r18
 5da:	73 0b       	sbc	r23, r19
 5dc:	60 32       	cpi	r22, 0x20	; 32
 5de:	71 05       	cpc	r23, r1
 5e0:	0c f0       	brlt	.+2      	; 0x5e4 <_fpadd_parts+0xb8>
 5e2:	61 c0       	rjmp	.+194    	; 0x6a6 <_fpadd_parts+0x17a>
 5e4:	12 16       	cp	r1, r18
 5e6:	13 06       	cpc	r1, r19
 5e8:	6c f5       	brge	.+90     	; 0x644 <_fpadd_parts+0x118>
 5ea:	37 01       	movw	r6, r14
 5ec:	48 01       	movw	r8, r16
 5ee:	06 2e       	mov	r0, r22
 5f0:	04 c0       	rjmp	.+8      	; 0x5fa <_fpadd_parts+0xce>
 5f2:	96 94       	lsr	r9
 5f4:	87 94       	ror	r8
 5f6:	77 94       	ror	r7
 5f8:	67 94       	ror	r6
 5fa:	0a 94       	dec	r0
 5fc:	d2 f7       	brpl	.-12     	; 0x5f2 <_fpadd_parts+0xc6>
 5fe:	21 e0       	ldi	r18, 0x01	; 1
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	40 e0       	ldi	r20, 0x00	; 0
 604:	50 e0       	ldi	r21, 0x00	; 0
 606:	04 c0       	rjmp	.+8      	; 0x610 <_fpadd_parts+0xe4>
 608:	22 0f       	add	r18, r18
 60a:	33 1f       	adc	r19, r19
 60c:	44 1f       	adc	r20, r20
 60e:	55 1f       	adc	r21, r21
 610:	6a 95       	dec	r22
 612:	d2 f7       	brpl	.-12     	; 0x608 <_fpadd_parts+0xdc>
 614:	21 50       	subi	r18, 0x01	; 1
 616:	30 40       	sbci	r19, 0x00	; 0
 618:	40 40       	sbci	r20, 0x00	; 0
 61a:	50 40       	sbci	r21, 0x00	; 0
 61c:	2e 21       	and	r18, r14
 61e:	3f 21       	and	r19, r15
 620:	40 23       	and	r20, r16
 622:	51 23       	and	r21, r17
 624:	21 15       	cp	r18, r1
 626:	31 05       	cpc	r19, r1
 628:	41 05       	cpc	r20, r1
 62a:	51 05       	cpc	r21, r1
 62c:	21 f0       	breq	.+8      	; 0x636 <_fpadd_parts+0x10a>
 62e:	21 e0       	ldi	r18, 0x01	; 1
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	40 e0       	ldi	r20, 0x00	; 0
 634:	50 e0       	ldi	r21, 0x00	; 0
 636:	79 01       	movw	r14, r18
 638:	8a 01       	movw	r16, r20
 63a:	e6 28       	or	r14, r6
 63c:	f7 28       	or	r15, r7
 63e:	08 29       	or	r16, r8
 640:	19 29       	or	r17, r9
 642:	3c c0       	rjmp	.+120    	; 0x6bc <_fpadd_parts+0x190>
 644:	23 2b       	or	r18, r19
 646:	d1 f1       	breq	.+116    	; 0x6bc <_fpadd_parts+0x190>
 648:	26 0e       	add	r2, r22
 64a:	37 1e       	adc	r3, r23
 64c:	35 01       	movw	r6, r10
 64e:	46 01       	movw	r8, r12
 650:	06 2e       	mov	r0, r22
 652:	04 c0       	rjmp	.+8      	; 0x65c <_fpadd_parts+0x130>
 654:	96 94       	lsr	r9
 656:	87 94       	ror	r8
 658:	77 94       	ror	r7
 65a:	67 94       	ror	r6
 65c:	0a 94       	dec	r0
 65e:	d2 f7       	brpl	.-12     	; 0x654 <_fpadd_parts+0x128>
 660:	21 e0       	ldi	r18, 0x01	; 1
 662:	30 e0       	ldi	r19, 0x00	; 0
 664:	40 e0       	ldi	r20, 0x00	; 0
 666:	50 e0       	ldi	r21, 0x00	; 0
 668:	04 c0       	rjmp	.+8      	; 0x672 <_fpadd_parts+0x146>
 66a:	22 0f       	add	r18, r18
 66c:	33 1f       	adc	r19, r19
 66e:	44 1f       	adc	r20, r20
 670:	55 1f       	adc	r21, r21
 672:	6a 95       	dec	r22
 674:	d2 f7       	brpl	.-12     	; 0x66a <_fpadd_parts+0x13e>
 676:	21 50       	subi	r18, 0x01	; 1
 678:	30 40       	sbci	r19, 0x00	; 0
 67a:	40 40       	sbci	r20, 0x00	; 0
 67c:	50 40       	sbci	r21, 0x00	; 0
 67e:	2a 21       	and	r18, r10
 680:	3b 21       	and	r19, r11
 682:	4c 21       	and	r20, r12
 684:	5d 21       	and	r21, r13
 686:	21 15       	cp	r18, r1
 688:	31 05       	cpc	r19, r1
 68a:	41 05       	cpc	r20, r1
 68c:	51 05       	cpc	r21, r1
 68e:	21 f0       	breq	.+8      	; 0x698 <_fpadd_parts+0x16c>
 690:	21 e0       	ldi	r18, 0x01	; 1
 692:	30 e0       	ldi	r19, 0x00	; 0
 694:	40 e0       	ldi	r20, 0x00	; 0
 696:	50 e0       	ldi	r21, 0x00	; 0
 698:	59 01       	movw	r10, r18
 69a:	6a 01       	movw	r12, r20
 69c:	a6 28       	or	r10, r6
 69e:	b7 28       	or	r11, r7
 6a0:	c8 28       	or	r12, r8
 6a2:	d9 28       	or	r13, r9
 6a4:	0b c0       	rjmp	.+22     	; 0x6bc <_fpadd_parts+0x190>
 6a6:	82 15       	cp	r24, r2
 6a8:	93 05       	cpc	r25, r3
 6aa:	2c f0       	brlt	.+10     	; 0x6b6 <_fpadd_parts+0x18a>
 6ac:	1c 01       	movw	r2, r24
 6ae:	aa 24       	eor	r10, r10
 6b0:	bb 24       	eor	r11, r11
 6b2:	65 01       	movw	r12, r10
 6b4:	03 c0       	rjmp	.+6      	; 0x6bc <_fpadd_parts+0x190>
 6b6:	ee 24       	eor	r14, r14
 6b8:	ff 24       	eor	r15, r15
 6ba:	87 01       	movw	r16, r14
 6bc:	11 96       	adiw	r26, 0x01	; 1
 6be:	9c 91       	ld	r25, X
 6c0:	d2 01       	movw	r26, r4
 6c2:	11 96       	adiw	r26, 0x01	; 1
 6c4:	8c 91       	ld	r24, X
 6c6:	98 17       	cp	r25, r24
 6c8:	09 f4       	brne	.+2      	; 0x6cc <_fpadd_parts+0x1a0>
 6ca:	45 c0       	rjmp	.+138    	; 0x756 <_fpadd_parts+0x22a>
 6cc:	99 23       	and	r25, r25
 6ce:	39 f0       	breq	.+14     	; 0x6de <_fpadd_parts+0x1b2>
 6d0:	a8 01       	movw	r20, r16
 6d2:	97 01       	movw	r18, r14
 6d4:	2a 19       	sub	r18, r10
 6d6:	3b 09       	sbc	r19, r11
 6d8:	4c 09       	sbc	r20, r12
 6da:	5d 09       	sbc	r21, r13
 6dc:	06 c0       	rjmp	.+12     	; 0x6ea <_fpadd_parts+0x1be>
 6de:	a6 01       	movw	r20, r12
 6e0:	95 01       	movw	r18, r10
 6e2:	2e 19       	sub	r18, r14
 6e4:	3f 09       	sbc	r19, r15
 6e6:	40 0b       	sbc	r20, r16
 6e8:	51 0b       	sbc	r21, r17
 6ea:	57 fd       	sbrc	r21, 7
 6ec:	08 c0       	rjmp	.+16     	; 0x6fe <_fpadd_parts+0x1d2>
 6ee:	11 82       	std	Z+1, r1	; 0x01
 6f0:	33 82       	std	Z+3, r3	; 0x03
 6f2:	22 82       	std	Z+2, r2	; 0x02
 6f4:	24 83       	std	Z+4, r18	; 0x04
 6f6:	35 83       	std	Z+5, r19	; 0x05
 6f8:	46 83       	std	Z+6, r20	; 0x06
 6fa:	57 83       	std	Z+7, r21	; 0x07
 6fc:	1d c0       	rjmp	.+58     	; 0x738 <_fpadd_parts+0x20c>
 6fe:	81 e0       	ldi	r24, 0x01	; 1
 700:	81 83       	std	Z+1, r24	; 0x01
 702:	33 82       	std	Z+3, r3	; 0x03
 704:	22 82       	std	Z+2, r2	; 0x02
 706:	88 27       	eor	r24, r24
 708:	99 27       	eor	r25, r25
 70a:	dc 01       	movw	r26, r24
 70c:	82 1b       	sub	r24, r18
 70e:	93 0b       	sbc	r25, r19
 710:	a4 0b       	sbc	r26, r20
 712:	b5 0b       	sbc	r27, r21
 714:	84 83       	std	Z+4, r24	; 0x04
 716:	95 83       	std	Z+5, r25	; 0x05
 718:	a6 83       	std	Z+6, r26	; 0x06
 71a:	b7 83       	std	Z+7, r27	; 0x07
 71c:	0d c0       	rjmp	.+26     	; 0x738 <_fpadd_parts+0x20c>
 71e:	22 0f       	add	r18, r18
 720:	33 1f       	adc	r19, r19
 722:	44 1f       	adc	r20, r20
 724:	55 1f       	adc	r21, r21
 726:	24 83       	std	Z+4, r18	; 0x04
 728:	35 83       	std	Z+5, r19	; 0x05
 72a:	46 83       	std	Z+6, r20	; 0x06
 72c:	57 83       	std	Z+7, r21	; 0x07
 72e:	82 81       	ldd	r24, Z+2	; 0x02
 730:	93 81       	ldd	r25, Z+3	; 0x03
 732:	01 97       	sbiw	r24, 0x01	; 1
 734:	93 83       	std	Z+3, r25	; 0x03
 736:	82 83       	std	Z+2, r24	; 0x02
 738:	24 81       	ldd	r18, Z+4	; 0x04
 73a:	35 81       	ldd	r19, Z+5	; 0x05
 73c:	46 81       	ldd	r20, Z+6	; 0x06
 73e:	57 81       	ldd	r21, Z+7	; 0x07
 740:	da 01       	movw	r26, r20
 742:	c9 01       	movw	r24, r18
 744:	01 97       	sbiw	r24, 0x01	; 1
 746:	a1 09       	sbc	r26, r1
 748:	b1 09       	sbc	r27, r1
 74a:	8f 5f       	subi	r24, 0xFF	; 255
 74c:	9f 4f       	sbci	r25, 0xFF	; 255
 74e:	af 4f       	sbci	r26, 0xFF	; 255
 750:	bf 43       	sbci	r27, 0x3F	; 63
 752:	28 f3       	brcs	.-54     	; 0x71e <_fpadd_parts+0x1f2>
 754:	0b c0       	rjmp	.+22     	; 0x76c <_fpadd_parts+0x240>
 756:	91 83       	std	Z+1, r25	; 0x01
 758:	33 82       	std	Z+3, r3	; 0x03
 75a:	22 82       	std	Z+2, r2	; 0x02
 75c:	ea 0c       	add	r14, r10
 75e:	fb 1c       	adc	r15, r11
 760:	0c 1d       	adc	r16, r12
 762:	1d 1d       	adc	r17, r13
 764:	e4 82       	std	Z+4, r14	; 0x04
 766:	f5 82       	std	Z+5, r15	; 0x05
 768:	06 83       	std	Z+6, r16	; 0x06
 76a:	17 83       	std	Z+7, r17	; 0x07
 76c:	83 e0       	ldi	r24, 0x03	; 3
 76e:	80 83       	st	Z, r24
 770:	24 81       	ldd	r18, Z+4	; 0x04
 772:	35 81       	ldd	r19, Z+5	; 0x05
 774:	46 81       	ldd	r20, Z+6	; 0x06
 776:	57 81       	ldd	r21, Z+7	; 0x07
 778:	57 ff       	sbrs	r21, 7
 77a:	1a c0       	rjmp	.+52     	; 0x7b0 <_fpadd_parts+0x284>
 77c:	c9 01       	movw	r24, r18
 77e:	aa 27       	eor	r26, r26
 780:	97 fd       	sbrc	r25, 7
 782:	a0 95       	com	r26
 784:	ba 2f       	mov	r27, r26
 786:	81 70       	andi	r24, 0x01	; 1
 788:	90 70       	andi	r25, 0x00	; 0
 78a:	a0 70       	andi	r26, 0x00	; 0
 78c:	b0 70       	andi	r27, 0x00	; 0
 78e:	56 95       	lsr	r21
 790:	47 95       	ror	r20
 792:	37 95       	ror	r19
 794:	27 95       	ror	r18
 796:	82 2b       	or	r24, r18
 798:	93 2b       	or	r25, r19
 79a:	a4 2b       	or	r26, r20
 79c:	b5 2b       	or	r27, r21
 79e:	84 83       	std	Z+4, r24	; 0x04
 7a0:	95 83       	std	Z+5, r25	; 0x05
 7a2:	a6 83       	std	Z+6, r26	; 0x06
 7a4:	b7 83       	std	Z+7, r27	; 0x07
 7a6:	82 81       	ldd	r24, Z+2	; 0x02
 7a8:	93 81       	ldd	r25, Z+3	; 0x03
 7aa:	01 96       	adiw	r24, 0x01	; 1
 7ac:	93 83       	std	Z+3, r25	; 0x03
 7ae:	82 83       	std	Z+2, r24	; 0x02
 7b0:	df 01       	movw	r26, r30
 7b2:	01 c0       	rjmp	.+2      	; 0x7b6 <_fpadd_parts+0x28a>
 7b4:	d2 01       	movw	r26, r4
 7b6:	cd 01       	movw	r24, r26
 7b8:	cd b7       	in	r28, 0x3d	; 61
 7ba:	de b7       	in	r29, 0x3e	; 62
 7bc:	e2 e1       	ldi	r30, 0x12	; 18
 7be:	db c3       	rjmp	.+1974   	; 0xf76 <__epilogue_restores__>

000007c0 <__subsf3>:
 7c0:	a0 e2       	ldi	r26, 0x20	; 32
 7c2:	b0 e0       	ldi	r27, 0x00	; 0
 7c4:	e5 ee       	ldi	r30, 0xE5	; 229
 7c6:	f3 e0       	ldi	r31, 0x03	; 3
 7c8:	c6 c3       	rjmp	.+1932   	; 0xf56 <__prologue_saves__+0x18>
 7ca:	69 83       	std	Y+1, r22	; 0x01
 7cc:	7a 83       	std	Y+2, r23	; 0x02
 7ce:	8b 83       	std	Y+3, r24	; 0x03
 7d0:	9c 83       	std	Y+4, r25	; 0x04
 7d2:	2d 83       	std	Y+5, r18	; 0x05
 7d4:	3e 83       	std	Y+6, r19	; 0x06
 7d6:	4f 83       	std	Y+7, r20	; 0x07
 7d8:	58 87       	std	Y+8, r21	; 0x08
 7da:	e9 e0       	ldi	r30, 0x09	; 9
 7dc:	ee 2e       	mov	r14, r30
 7de:	f1 2c       	mov	r15, r1
 7e0:	ec 0e       	add	r14, r28
 7e2:	fd 1e       	adc	r15, r29
 7e4:	ce 01       	movw	r24, r28
 7e6:	01 96       	adiw	r24, 0x01	; 1
 7e8:	b7 01       	movw	r22, r14
 7ea:	d8 d2       	rcall	.+1456   	; 0xd9c <__unpack_f>
 7ec:	8e 01       	movw	r16, r28
 7ee:	0f 5e       	subi	r16, 0xEF	; 239
 7f0:	1f 4f       	sbci	r17, 0xFF	; 255
 7f2:	ce 01       	movw	r24, r28
 7f4:	05 96       	adiw	r24, 0x05	; 5
 7f6:	b8 01       	movw	r22, r16
 7f8:	d1 d2       	rcall	.+1442   	; 0xd9c <__unpack_f>
 7fa:	8a 89       	ldd	r24, Y+18	; 0x12
 7fc:	91 e0       	ldi	r25, 0x01	; 1
 7fe:	89 27       	eor	r24, r25
 800:	8a 8b       	std	Y+18, r24	; 0x12
 802:	c7 01       	movw	r24, r14
 804:	b8 01       	movw	r22, r16
 806:	ae 01       	movw	r20, r28
 808:	47 5e       	subi	r20, 0xE7	; 231
 80a:	5f 4f       	sbci	r21, 0xFF	; 255
 80c:	8f de       	rcall	.-738    	; 0x52c <_fpadd_parts>
 80e:	f1 d1       	rcall	.+994    	; 0xbf2 <__pack_f>
 810:	a0 96       	adiw	r28, 0x20	; 32
 812:	e6 e0       	ldi	r30, 0x06	; 6
 814:	bc c3       	rjmp	.+1912   	; 0xf8e <__epilogue_restores__+0x18>

00000816 <__addsf3>:
 816:	a0 e2       	ldi	r26, 0x20	; 32
 818:	b0 e0       	ldi	r27, 0x00	; 0
 81a:	e0 e1       	ldi	r30, 0x10	; 16
 81c:	f4 e0       	ldi	r31, 0x04	; 4
 81e:	9b c3       	rjmp	.+1846   	; 0xf56 <__prologue_saves__+0x18>
 820:	69 83       	std	Y+1, r22	; 0x01
 822:	7a 83       	std	Y+2, r23	; 0x02
 824:	8b 83       	std	Y+3, r24	; 0x03
 826:	9c 83       	std	Y+4, r25	; 0x04
 828:	2d 83       	std	Y+5, r18	; 0x05
 82a:	3e 83       	std	Y+6, r19	; 0x06
 82c:	4f 83       	std	Y+7, r20	; 0x07
 82e:	58 87       	std	Y+8, r21	; 0x08
 830:	f9 e0       	ldi	r31, 0x09	; 9
 832:	ef 2e       	mov	r14, r31
 834:	f1 2c       	mov	r15, r1
 836:	ec 0e       	add	r14, r28
 838:	fd 1e       	adc	r15, r29
 83a:	ce 01       	movw	r24, r28
 83c:	01 96       	adiw	r24, 0x01	; 1
 83e:	b7 01       	movw	r22, r14
 840:	ad d2       	rcall	.+1370   	; 0xd9c <__unpack_f>
 842:	8e 01       	movw	r16, r28
 844:	0f 5e       	subi	r16, 0xEF	; 239
 846:	1f 4f       	sbci	r17, 0xFF	; 255
 848:	ce 01       	movw	r24, r28
 84a:	05 96       	adiw	r24, 0x05	; 5
 84c:	b8 01       	movw	r22, r16
 84e:	a6 d2       	rcall	.+1356   	; 0xd9c <__unpack_f>
 850:	c7 01       	movw	r24, r14
 852:	b8 01       	movw	r22, r16
 854:	ae 01       	movw	r20, r28
 856:	47 5e       	subi	r20, 0xE7	; 231
 858:	5f 4f       	sbci	r21, 0xFF	; 255
 85a:	68 de       	rcall	.-816    	; 0x52c <_fpadd_parts>
 85c:	ca d1       	rcall	.+916    	; 0xbf2 <__pack_f>
 85e:	a0 96       	adiw	r28, 0x20	; 32
 860:	e6 e0       	ldi	r30, 0x06	; 6
 862:	95 c3       	rjmp	.+1834   	; 0xf8e <__epilogue_restores__+0x18>

00000864 <__mulsf3>:
 864:	a0 e2       	ldi	r26, 0x20	; 32
 866:	b0 e0       	ldi	r27, 0x00	; 0
 868:	e7 e3       	ldi	r30, 0x37	; 55
 86a:	f4 e0       	ldi	r31, 0x04	; 4
 86c:	68 c3       	rjmp	.+1744   	; 0xf3e <__prologue_saves__>
 86e:	69 83       	std	Y+1, r22	; 0x01
 870:	7a 83       	std	Y+2, r23	; 0x02
 872:	8b 83       	std	Y+3, r24	; 0x03
 874:	9c 83       	std	Y+4, r25	; 0x04
 876:	2d 83       	std	Y+5, r18	; 0x05
 878:	3e 83       	std	Y+6, r19	; 0x06
 87a:	4f 83       	std	Y+7, r20	; 0x07
 87c:	58 87       	std	Y+8, r21	; 0x08
 87e:	ce 01       	movw	r24, r28
 880:	01 96       	adiw	r24, 0x01	; 1
 882:	be 01       	movw	r22, r28
 884:	67 5f       	subi	r22, 0xF7	; 247
 886:	7f 4f       	sbci	r23, 0xFF	; 255
 888:	89 d2       	rcall	.+1298   	; 0xd9c <__unpack_f>
 88a:	ce 01       	movw	r24, r28
 88c:	05 96       	adiw	r24, 0x05	; 5
 88e:	be 01       	movw	r22, r28
 890:	6f 5e       	subi	r22, 0xEF	; 239
 892:	7f 4f       	sbci	r23, 0xFF	; 255
 894:	83 d2       	rcall	.+1286   	; 0xd9c <__unpack_f>
 896:	99 85       	ldd	r25, Y+9	; 0x09
 898:	92 30       	cpi	r25, 0x02	; 2
 89a:	88 f0       	brcs	.+34     	; 0x8be <__mulsf3+0x5a>
 89c:	89 89       	ldd	r24, Y+17	; 0x11
 89e:	82 30       	cpi	r24, 0x02	; 2
 8a0:	c8 f0       	brcs	.+50     	; 0x8d4 <__mulsf3+0x70>
 8a2:	94 30       	cpi	r25, 0x04	; 4
 8a4:	19 f4       	brne	.+6      	; 0x8ac <__mulsf3+0x48>
 8a6:	82 30       	cpi	r24, 0x02	; 2
 8a8:	51 f4       	brne	.+20     	; 0x8be <__mulsf3+0x5a>
 8aa:	04 c0       	rjmp	.+8      	; 0x8b4 <__mulsf3+0x50>
 8ac:	84 30       	cpi	r24, 0x04	; 4
 8ae:	29 f4       	brne	.+10     	; 0x8ba <__mulsf3+0x56>
 8b0:	92 30       	cpi	r25, 0x02	; 2
 8b2:	81 f4       	brne	.+32     	; 0x8d4 <__mulsf3+0x70>
 8b4:	80 e6       	ldi	r24, 0x60	; 96
 8b6:	90 e0       	ldi	r25, 0x00	; 0
 8b8:	c6 c0       	rjmp	.+396    	; 0xa46 <__mulsf3+0x1e2>
 8ba:	92 30       	cpi	r25, 0x02	; 2
 8bc:	49 f4       	brne	.+18     	; 0x8d0 <__mulsf3+0x6c>
 8be:	20 e0       	ldi	r18, 0x00	; 0
 8c0:	9a 85       	ldd	r25, Y+10	; 0x0a
 8c2:	8a 89       	ldd	r24, Y+18	; 0x12
 8c4:	98 13       	cpse	r25, r24
 8c6:	21 e0       	ldi	r18, 0x01	; 1
 8c8:	2a 87       	std	Y+10, r18	; 0x0a
 8ca:	ce 01       	movw	r24, r28
 8cc:	09 96       	adiw	r24, 0x09	; 9
 8ce:	bb c0       	rjmp	.+374    	; 0xa46 <__mulsf3+0x1e2>
 8d0:	82 30       	cpi	r24, 0x02	; 2
 8d2:	49 f4       	brne	.+18     	; 0x8e6 <__mulsf3+0x82>
 8d4:	20 e0       	ldi	r18, 0x00	; 0
 8d6:	9a 85       	ldd	r25, Y+10	; 0x0a
 8d8:	8a 89       	ldd	r24, Y+18	; 0x12
 8da:	98 13       	cpse	r25, r24
 8dc:	21 e0       	ldi	r18, 0x01	; 1
 8de:	2a 8b       	std	Y+18, r18	; 0x12
 8e0:	ce 01       	movw	r24, r28
 8e2:	41 96       	adiw	r24, 0x11	; 17
 8e4:	b0 c0       	rjmp	.+352    	; 0xa46 <__mulsf3+0x1e2>
 8e6:	2d 84       	ldd	r2, Y+13	; 0x0d
 8e8:	3e 84       	ldd	r3, Y+14	; 0x0e
 8ea:	4f 84       	ldd	r4, Y+15	; 0x0f
 8ec:	58 88       	ldd	r5, Y+16	; 0x10
 8ee:	6d 88       	ldd	r6, Y+21	; 0x15
 8f0:	7e 88       	ldd	r7, Y+22	; 0x16
 8f2:	8f 88       	ldd	r8, Y+23	; 0x17
 8f4:	98 8c       	ldd	r9, Y+24	; 0x18
 8f6:	ee 24       	eor	r14, r14
 8f8:	ff 24       	eor	r15, r15
 8fa:	87 01       	movw	r16, r14
 8fc:	aa 24       	eor	r10, r10
 8fe:	bb 24       	eor	r11, r11
 900:	65 01       	movw	r12, r10
 902:	40 e0       	ldi	r20, 0x00	; 0
 904:	50 e0       	ldi	r21, 0x00	; 0
 906:	60 e0       	ldi	r22, 0x00	; 0
 908:	70 e0       	ldi	r23, 0x00	; 0
 90a:	e0 e0       	ldi	r30, 0x00	; 0
 90c:	f0 e0       	ldi	r31, 0x00	; 0
 90e:	c1 01       	movw	r24, r2
 910:	81 70       	andi	r24, 0x01	; 1
 912:	90 70       	andi	r25, 0x00	; 0
 914:	89 2b       	or	r24, r25
 916:	e9 f0       	breq	.+58     	; 0x952 <__mulsf3+0xee>
 918:	e6 0c       	add	r14, r6
 91a:	f7 1c       	adc	r15, r7
 91c:	08 1d       	adc	r16, r8
 91e:	19 1d       	adc	r17, r9
 920:	9a 01       	movw	r18, r20
 922:	ab 01       	movw	r20, r22
 924:	2a 0d       	add	r18, r10
 926:	3b 1d       	adc	r19, r11
 928:	4c 1d       	adc	r20, r12
 92a:	5d 1d       	adc	r21, r13
 92c:	80 e0       	ldi	r24, 0x00	; 0
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	a0 e0       	ldi	r26, 0x00	; 0
 932:	b0 e0       	ldi	r27, 0x00	; 0
 934:	e6 14       	cp	r14, r6
 936:	f7 04       	cpc	r15, r7
 938:	08 05       	cpc	r16, r8
 93a:	19 05       	cpc	r17, r9
 93c:	20 f4       	brcc	.+8      	; 0x946 <__mulsf3+0xe2>
 93e:	81 e0       	ldi	r24, 0x01	; 1
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	a0 e0       	ldi	r26, 0x00	; 0
 944:	b0 e0       	ldi	r27, 0x00	; 0
 946:	ba 01       	movw	r22, r20
 948:	a9 01       	movw	r20, r18
 94a:	48 0f       	add	r20, r24
 94c:	59 1f       	adc	r21, r25
 94e:	6a 1f       	adc	r22, r26
 950:	7b 1f       	adc	r23, r27
 952:	aa 0c       	add	r10, r10
 954:	bb 1c       	adc	r11, r11
 956:	cc 1c       	adc	r12, r12
 958:	dd 1c       	adc	r13, r13
 95a:	97 fe       	sbrs	r9, 7
 95c:	08 c0       	rjmp	.+16     	; 0x96e <__mulsf3+0x10a>
 95e:	81 e0       	ldi	r24, 0x01	; 1
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	a0 e0       	ldi	r26, 0x00	; 0
 964:	b0 e0       	ldi	r27, 0x00	; 0
 966:	a8 2a       	or	r10, r24
 968:	b9 2a       	or	r11, r25
 96a:	ca 2a       	or	r12, r26
 96c:	db 2a       	or	r13, r27
 96e:	31 96       	adiw	r30, 0x01	; 1
 970:	e0 32       	cpi	r30, 0x20	; 32
 972:	f1 05       	cpc	r31, r1
 974:	49 f0       	breq	.+18     	; 0x988 <__mulsf3+0x124>
 976:	66 0c       	add	r6, r6
 978:	77 1c       	adc	r7, r7
 97a:	88 1c       	adc	r8, r8
 97c:	99 1c       	adc	r9, r9
 97e:	56 94       	lsr	r5
 980:	47 94       	ror	r4
 982:	37 94       	ror	r3
 984:	27 94       	ror	r2
 986:	c3 cf       	rjmp	.-122    	; 0x90e <__mulsf3+0xaa>
 988:	fa 85       	ldd	r31, Y+10	; 0x0a
 98a:	ea 89       	ldd	r30, Y+18	; 0x12
 98c:	2b 89       	ldd	r18, Y+19	; 0x13
 98e:	3c 89       	ldd	r19, Y+20	; 0x14
 990:	8b 85       	ldd	r24, Y+11	; 0x0b
 992:	9c 85       	ldd	r25, Y+12	; 0x0c
 994:	28 0f       	add	r18, r24
 996:	39 1f       	adc	r19, r25
 998:	2e 5f       	subi	r18, 0xFE	; 254
 99a:	3f 4f       	sbci	r19, 0xFF	; 255
 99c:	17 c0       	rjmp	.+46     	; 0x9cc <__mulsf3+0x168>
 99e:	ca 01       	movw	r24, r20
 9a0:	81 70       	andi	r24, 0x01	; 1
 9a2:	90 70       	andi	r25, 0x00	; 0
 9a4:	89 2b       	or	r24, r25
 9a6:	61 f0       	breq	.+24     	; 0x9c0 <__mulsf3+0x15c>
 9a8:	16 95       	lsr	r17
 9aa:	07 95       	ror	r16
 9ac:	f7 94       	ror	r15
 9ae:	e7 94       	ror	r14
 9b0:	80 e0       	ldi	r24, 0x00	; 0
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	a0 e0       	ldi	r26, 0x00	; 0
 9b6:	b0 e8       	ldi	r27, 0x80	; 128
 9b8:	e8 2a       	or	r14, r24
 9ba:	f9 2a       	or	r15, r25
 9bc:	0a 2b       	or	r16, r26
 9be:	1b 2b       	or	r17, r27
 9c0:	76 95       	lsr	r23
 9c2:	67 95       	ror	r22
 9c4:	57 95       	ror	r21
 9c6:	47 95       	ror	r20
 9c8:	2f 5f       	subi	r18, 0xFF	; 255
 9ca:	3f 4f       	sbci	r19, 0xFF	; 255
 9cc:	77 fd       	sbrc	r23, 7
 9ce:	e7 cf       	rjmp	.-50     	; 0x99e <__mulsf3+0x13a>
 9d0:	0c c0       	rjmp	.+24     	; 0x9ea <__mulsf3+0x186>
 9d2:	44 0f       	add	r20, r20
 9d4:	55 1f       	adc	r21, r21
 9d6:	66 1f       	adc	r22, r22
 9d8:	77 1f       	adc	r23, r23
 9da:	17 fd       	sbrc	r17, 7
 9dc:	41 60       	ori	r20, 0x01	; 1
 9de:	ee 0c       	add	r14, r14
 9e0:	ff 1c       	adc	r15, r15
 9e2:	00 1f       	adc	r16, r16
 9e4:	11 1f       	adc	r17, r17
 9e6:	21 50       	subi	r18, 0x01	; 1
 9e8:	30 40       	sbci	r19, 0x00	; 0
 9ea:	40 30       	cpi	r20, 0x00	; 0
 9ec:	90 e0       	ldi	r25, 0x00	; 0
 9ee:	59 07       	cpc	r21, r25
 9f0:	90 e0       	ldi	r25, 0x00	; 0
 9f2:	69 07       	cpc	r22, r25
 9f4:	90 e4       	ldi	r25, 0x40	; 64
 9f6:	79 07       	cpc	r23, r25
 9f8:	60 f3       	brcs	.-40     	; 0x9d2 <__mulsf3+0x16e>
 9fa:	2b 8f       	std	Y+27, r18	; 0x1b
 9fc:	3c 8f       	std	Y+28, r19	; 0x1c
 9fe:	db 01       	movw	r26, r22
 a00:	ca 01       	movw	r24, r20
 a02:	8f 77       	andi	r24, 0x7F	; 127
 a04:	90 70       	andi	r25, 0x00	; 0
 a06:	a0 70       	andi	r26, 0x00	; 0
 a08:	b0 70       	andi	r27, 0x00	; 0
 a0a:	80 34       	cpi	r24, 0x40	; 64
 a0c:	91 05       	cpc	r25, r1
 a0e:	a1 05       	cpc	r26, r1
 a10:	b1 05       	cpc	r27, r1
 a12:	61 f4       	brne	.+24     	; 0xa2c <__mulsf3+0x1c8>
 a14:	47 fd       	sbrc	r20, 7
 a16:	0a c0       	rjmp	.+20     	; 0xa2c <__mulsf3+0x1c8>
 a18:	e1 14       	cp	r14, r1
 a1a:	f1 04       	cpc	r15, r1
 a1c:	01 05       	cpc	r16, r1
 a1e:	11 05       	cpc	r17, r1
 a20:	29 f0       	breq	.+10     	; 0xa2c <__mulsf3+0x1c8>
 a22:	40 5c       	subi	r20, 0xC0	; 192
 a24:	5f 4f       	sbci	r21, 0xFF	; 255
 a26:	6f 4f       	sbci	r22, 0xFF	; 255
 a28:	7f 4f       	sbci	r23, 0xFF	; 255
 a2a:	40 78       	andi	r20, 0x80	; 128
 a2c:	1a 8e       	std	Y+26, r1	; 0x1a
 a2e:	fe 17       	cp	r31, r30
 a30:	11 f0       	breq	.+4      	; 0xa36 <__mulsf3+0x1d2>
 a32:	81 e0       	ldi	r24, 0x01	; 1
 a34:	8a 8f       	std	Y+26, r24	; 0x1a
 a36:	4d 8f       	std	Y+29, r20	; 0x1d
 a38:	5e 8f       	std	Y+30, r21	; 0x1e
 a3a:	6f 8f       	std	Y+31, r22	; 0x1f
 a3c:	78 a3       	std	Y+32, r23	; 0x20
 a3e:	83 e0       	ldi	r24, 0x03	; 3
 a40:	89 8f       	std	Y+25, r24	; 0x19
 a42:	ce 01       	movw	r24, r28
 a44:	49 96       	adiw	r24, 0x19	; 25
 a46:	d5 d0       	rcall	.+426    	; 0xbf2 <__pack_f>
 a48:	a0 96       	adiw	r28, 0x20	; 32
 a4a:	e2 e1       	ldi	r30, 0x12	; 18
 a4c:	94 c2       	rjmp	.+1320   	; 0xf76 <__epilogue_restores__>

00000a4e <__gtsf2>:
 a4e:	a8 e1       	ldi	r26, 0x18	; 24
 a50:	b0 e0       	ldi	r27, 0x00	; 0
 a52:	ec e2       	ldi	r30, 0x2C	; 44
 a54:	f5 e0       	ldi	r31, 0x05	; 5
 a56:	7f c2       	rjmp	.+1278   	; 0xf56 <__prologue_saves__+0x18>
 a58:	69 83       	std	Y+1, r22	; 0x01
 a5a:	7a 83       	std	Y+2, r23	; 0x02
 a5c:	8b 83       	std	Y+3, r24	; 0x03
 a5e:	9c 83       	std	Y+4, r25	; 0x04
 a60:	2d 83       	std	Y+5, r18	; 0x05
 a62:	3e 83       	std	Y+6, r19	; 0x06
 a64:	4f 83       	std	Y+7, r20	; 0x07
 a66:	58 87       	std	Y+8, r21	; 0x08
 a68:	89 e0       	ldi	r24, 0x09	; 9
 a6a:	e8 2e       	mov	r14, r24
 a6c:	f1 2c       	mov	r15, r1
 a6e:	ec 0e       	add	r14, r28
 a70:	fd 1e       	adc	r15, r29
 a72:	ce 01       	movw	r24, r28
 a74:	01 96       	adiw	r24, 0x01	; 1
 a76:	b7 01       	movw	r22, r14
 a78:	91 d1       	rcall	.+802    	; 0xd9c <__unpack_f>
 a7a:	8e 01       	movw	r16, r28
 a7c:	0f 5e       	subi	r16, 0xEF	; 239
 a7e:	1f 4f       	sbci	r17, 0xFF	; 255
 a80:	ce 01       	movw	r24, r28
 a82:	05 96       	adiw	r24, 0x05	; 5
 a84:	b8 01       	movw	r22, r16
 a86:	8a d1       	rcall	.+788    	; 0xd9c <__unpack_f>
 a88:	89 85       	ldd	r24, Y+9	; 0x09
 a8a:	82 30       	cpi	r24, 0x02	; 2
 a8c:	38 f0       	brcs	.+14     	; 0xa9c <__gtsf2+0x4e>
 a8e:	89 89       	ldd	r24, Y+17	; 0x11
 a90:	82 30       	cpi	r24, 0x02	; 2
 a92:	20 f0       	brcs	.+8      	; 0xa9c <__gtsf2+0x4e>
 a94:	c7 01       	movw	r24, r14
 a96:	b8 01       	movw	r22, r16
 a98:	f9 d1       	rcall	.+1010   	; 0xe8c <__fpcmp_parts_f>
 a9a:	01 c0       	rjmp	.+2      	; 0xa9e <__gtsf2+0x50>
 a9c:	8f ef       	ldi	r24, 0xFF	; 255
 a9e:	68 96       	adiw	r28, 0x18	; 24
 aa0:	e6 e0       	ldi	r30, 0x06	; 6
 aa2:	75 c2       	rjmp	.+1258   	; 0xf8e <__epilogue_restores__+0x18>

00000aa4 <__gesf2>:
 aa4:	a8 e1       	ldi	r26, 0x18	; 24
 aa6:	b0 e0       	ldi	r27, 0x00	; 0
 aa8:	e7 e5       	ldi	r30, 0x57	; 87
 aaa:	f5 e0       	ldi	r31, 0x05	; 5
 aac:	54 c2       	rjmp	.+1192   	; 0xf56 <__prologue_saves__+0x18>
 aae:	69 83       	std	Y+1, r22	; 0x01
 ab0:	7a 83       	std	Y+2, r23	; 0x02
 ab2:	8b 83       	std	Y+3, r24	; 0x03
 ab4:	9c 83       	std	Y+4, r25	; 0x04
 ab6:	2d 83       	std	Y+5, r18	; 0x05
 ab8:	3e 83       	std	Y+6, r19	; 0x06
 aba:	4f 83       	std	Y+7, r20	; 0x07
 abc:	58 87       	std	Y+8, r21	; 0x08
 abe:	89 e0       	ldi	r24, 0x09	; 9
 ac0:	e8 2e       	mov	r14, r24
 ac2:	f1 2c       	mov	r15, r1
 ac4:	ec 0e       	add	r14, r28
 ac6:	fd 1e       	adc	r15, r29
 ac8:	ce 01       	movw	r24, r28
 aca:	01 96       	adiw	r24, 0x01	; 1
 acc:	b7 01       	movw	r22, r14
 ace:	66 d1       	rcall	.+716    	; 0xd9c <__unpack_f>
 ad0:	8e 01       	movw	r16, r28
 ad2:	0f 5e       	subi	r16, 0xEF	; 239
 ad4:	1f 4f       	sbci	r17, 0xFF	; 255
 ad6:	ce 01       	movw	r24, r28
 ad8:	05 96       	adiw	r24, 0x05	; 5
 ada:	b8 01       	movw	r22, r16
 adc:	5f d1       	rcall	.+702    	; 0xd9c <__unpack_f>
 ade:	89 85       	ldd	r24, Y+9	; 0x09
 ae0:	82 30       	cpi	r24, 0x02	; 2
 ae2:	38 f0       	brcs	.+14     	; 0xaf2 <__gesf2+0x4e>
 ae4:	89 89       	ldd	r24, Y+17	; 0x11
 ae6:	82 30       	cpi	r24, 0x02	; 2
 ae8:	20 f0       	brcs	.+8      	; 0xaf2 <__gesf2+0x4e>
 aea:	c7 01       	movw	r24, r14
 aec:	b8 01       	movw	r22, r16
 aee:	ce d1       	rcall	.+924    	; 0xe8c <__fpcmp_parts_f>
 af0:	01 c0       	rjmp	.+2      	; 0xaf4 <__gesf2+0x50>
 af2:	8f ef       	ldi	r24, 0xFF	; 255
 af4:	68 96       	adiw	r28, 0x18	; 24
 af6:	e6 e0       	ldi	r30, 0x06	; 6
 af8:	4a c2       	rjmp	.+1172   	; 0xf8e <__epilogue_restores__+0x18>

00000afa <__ltsf2>:
 afa:	a8 e1       	ldi	r26, 0x18	; 24
 afc:	b0 e0       	ldi	r27, 0x00	; 0
 afe:	e2 e8       	ldi	r30, 0x82	; 130
 b00:	f5 e0       	ldi	r31, 0x05	; 5
 b02:	29 c2       	rjmp	.+1106   	; 0xf56 <__prologue_saves__+0x18>
 b04:	69 83       	std	Y+1, r22	; 0x01
 b06:	7a 83       	std	Y+2, r23	; 0x02
 b08:	8b 83       	std	Y+3, r24	; 0x03
 b0a:	9c 83       	std	Y+4, r25	; 0x04
 b0c:	2d 83       	std	Y+5, r18	; 0x05
 b0e:	3e 83       	std	Y+6, r19	; 0x06
 b10:	4f 83       	std	Y+7, r20	; 0x07
 b12:	58 87       	std	Y+8, r21	; 0x08
 b14:	89 e0       	ldi	r24, 0x09	; 9
 b16:	e8 2e       	mov	r14, r24
 b18:	f1 2c       	mov	r15, r1
 b1a:	ec 0e       	add	r14, r28
 b1c:	fd 1e       	adc	r15, r29
 b1e:	ce 01       	movw	r24, r28
 b20:	01 96       	adiw	r24, 0x01	; 1
 b22:	b7 01       	movw	r22, r14
 b24:	3b d1       	rcall	.+630    	; 0xd9c <__unpack_f>
 b26:	8e 01       	movw	r16, r28
 b28:	0f 5e       	subi	r16, 0xEF	; 239
 b2a:	1f 4f       	sbci	r17, 0xFF	; 255
 b2c:	ce 01       	movw	r24, r28
 b2e:	05 96       	adiw	r24, 0x05	; 5
 b30:	b8 01       	movw	r22, r16
 b32:	34 d1       	rcall	.+616    	; 0xd9c <__unpack_f>
 b34:	89 85       	ldd	r24, Y+9	; 0x09
 b36:	82 30       	cpi	r24, 0x02	; 2
 b38:	38 f0       	brcs	.+14     	; 0xb48 <__ltsf2+0x4e>
 b3a:	89 89       	ldd	r24, Y+17	; 0x11
 b3c:	82 30       	cpi	r24, 0x02	; 2
 b3e:	20 f0       	brcs	.+8      	; 0xb48 <__ltsf2+0x4e>
 b40:	c7 01       	movw	r24, r14
 b42:	b8 01       	movw	r22, r16
 b44:	a3 d1       	rcall	.+838    	; 0xe8c <__fpcmp_parts_f>
 b46:	01 c0       	rjmp	.+2      	; 0xb4a <__ltsf2+0x50>
 b48:	81 e0       	ldi	r24, 0x01	; 1
 b4a:	68 96       	adiw	r28, 0x18	; 24
 b4c:	e6 e0       	ldi	r30, 0x06	; 6
 b4e:	1f c2       	rjmp	.+1086   	; 0xf8e <__epilogue_restores__+0x18>

00000b50 <__fixsfsi>:
 b50:	ac e0       	ldi	r26, 0x0C	; 12
 b52:	b0 e0       	ldi	r27, 0x00	; 0
 b54:	ed ea       	ldi	r30, 0xAD	; 173
 b56:	f5 e0       	ldi	r31, 0x05	; 5
 b58:	02 c2       	rjmp	.+1028   	; 0xf5e <__prologue_saves__+0x20>
 b5a:	69 83       	std	Y+1, r22	; 0x01
 b5c:	7a 83       	std	Y+2, r23	; 0x02
 b5e:	8b 83       	std	Y+3, r24	; 0x03
 b60:	9c 83       	std	Y+4, r25	; 0x04
 b62:	ce 01       	movw	r24, r28
 b64:	01 96       	adiw	r24, 0x01	; 1
 b66:	be 01       	movw	r22, r28
 b68:	6b 5f       	subi	r22, 0xFB	; 251
 b6a:	7f 4f       	sbci	r23, 0xFF	; 255
 b6c:	17 d1       	rcall	.+558    	; 0xd9c <__unpack_f>
 b6e:	8d 81       	ldd	r24, Y+5	; 0x05
 b70:	82 30       	cpi	r24, 0x02	; 2
 b72:	61 f1       	breq	.+88     	; 0xbcc <__fixsfsi+0x7c>
 b74:	82 30       	cpi	r24, 0x02	; 2
 b76:	50 f1       	brcs	.+84     	; 0xbcc <__fixsfsi+0x7c>
 b78:	84 30       	cpi	r24, 0x04	; 4
 b7a:	21 f4       	brne	.+8      	; 0xb84 <__fixsfsi+0x34>
 b7c:	8e 81       	ldd	r24, Y+6	; 0x06
 b7e:	88 23       	and	r24, r24
 b80:	51 f1       	breq	.+84     	; 0xbd6 <__fixsfsi+0x86>
 b82:	2e c0       	rjmp	.+92     	; 0xbe0 <__fixsfsi+0x90>
 b84:	2f 81       	ldd	r18, Y+7	; 0x07
 b86:	38 85       	ldd	r19, Y+8	; 0x08
 b88:	37 fd       	sbrc	r19, 7
 b8a:	20 c0       	rjmp	.+64     	; 0xbcc <__fixsfsi+0x7c>
 b8c:	6e 81       	ldd	r22, Y+6	; 0x06
 b8e:	2f 31       	cpi	r18, 0x1F	; 31
 b90:	31 05       	cpc	r19, r1
 b92:	1c f0       	brlt	.+6      	; 0xb9a <__fixsfsi+0x4a>
 b94:	66 23       	and	r22, r22
 b96:	f9 f0       	breq	.+62     	; 0xbd6 <__fixsfsi+0x86>
 b98:	23 c0       	rjmp	.+70     	; 0xbe0 <__fixsfsi+0x90>
 b9a:	8e e1       	ldi	r24, 0x1E	; 30
 b9c:	90 e0       	ldi	r25, 0x00	; 0
 b9e:	82 1b       	sub	r24, r18
 ba0:	93 0b       	sbc	r25, r19
 ba2:	29 85       	ldd	r18, Y+9	; 0x09
 ba4:	3a 85       	ldd	r19, Y+10	; 0x0a
 ba6:	4b 85       	ldd	r20, Y+11	; 0x0b
 ba8:	5c 85       	ldd	r21, Y+12	; 0x0c
 baa:	04 c0       	rjmp	.+8      	; 0xbb4 <__fixsfsi+0x64>
 bac:	56 95       	lsr	r21
 bae:	47 95       	ror	r20
 bb0:	37 95       	ror	r19
 bb2:	27 95       	ror	r18
 bb4:	8a 95       	dec	r24
 bb6:	d2 f7       	brpl	.-12     	; 0xbac <__fixsfsi+0x5c>
 bb8:	66 23       	and	r22, r22
 bba:	b1 f0       	breq	.+44     	; 0xbe8 <__fixsfsi+0x98>
 bbc:	50 95       	com	r21
 bbe:	40 95       	com	r20
 bc0:	30 95       	com	r19
 bc2:	21 95       	neg	r18
 bc4:	3f 4f       	sbci	r19, 0xFF	; 255
 bc6:	4f 4f       	sbci	r20, 0xFF	; 255
 bc8:	5f 4f       	sbci	r21, 0xFF	; 255
 bca:	0e c0       	rjmp	.+28     	; 0xbe8 <__fixsfsi+0x98>
 bcc:	20 e0       	ldi	r18, 0x00	; 0
 bce:	30 e0       	ldi	r19, 0x00	; 0
 bd0:	40 e0       	ldi	r20, 0x00	; 0
 bd2:	50 e0       	ldi	r21, 0x00	; 0
 bd4:	09 c0       	rjmp	.+18     	; 0xbe8 <__fixsfsi+0x98>
 bd6:	2f ef       	ldi	r18, 0xFF	; 255
 bd8:	3f ef       	ldi	r19, 0xFF	; 255
 bda:	4f ef       	ldi	r20, 0xFF	; 255
 bdc:	5f e7       	ldi	r21, 0x7F	; 127
 bde:	04 c0       	rjmp	.+8      	; 0xbe8 <__fixsfsi+0x98>
 be0:	20 e0       	ldi	r18, 0x00	; 0
 be2:	30 e0       	ldi	r19, 0x00	; 0
 be4:	40 e0       	ldi	r20, 0x00	; 0
 be6:	50 e8       	ldi	r21, 0x80	; 128
 be8:	b9 01       	movw	r22, r18
 bea:	ca 01       	movw	r24, r20
 bec:	2c 96       	adiw	r28, 0x0c	; 12
 bee:	e2 e0       	ldi	r30, 0x02	; 2
 bf0:	d2 c1       	rjmp	.+932    	; 0xf96 <__epilogue_restores__+0x20>

00000bf2 <__pack_f>:
 bf2:	df 92       	push	r13
 bf4:	ef 92       	push	r14
 bf6:	ff 92       	push	r15
 bf8:	0f 93       	push	r16
 bfa:	1f 93       	push	r17
 bfc:	fc 01       	movw	r30, r24
 bfe:	e4 80       	ldd	r14, Z+4	; 0x04
 c00:	f5 80       	ldd	r15, Z+5	; 0x05
 c02:	06 81       	ldd	r16, Z+6	; 0x06
 c04:	17 81       	ldd	r17, Z+7	; 0x07
 c06:	d1 80       	ldd	r13, Z+1	; 0x01
 c08:	80 81       	ld	r24, Z
 c0a:	82 30       	cpi	r24, 0x02	; 2
 c0c:	48 f4       	brcc	.+18     	; 0xc20 <__pack_f+0x2e>
 c0e:	80 e0       	ldi	r24, 0x00	; 0
 c10:	90 e0       	ldi	r25, 0x00	; 0
 c12:	a0 e1       	ldi	r26, 0x10	; 16
 c14:	b0 e0       	ldi	r27, 0x00	; 0
 c16:	e8 2a       	or	r14, r24
 c18:	f9 2a       	or	r15, r25
 c1a:	0a 2b       	or	r16, r26
 c1c:	1b 2b       	or	r17, r27
 c1e:	a5 c0       	rjmp	.+330    	; 0xd6a <__pack_f+0x178>
 c20:	84 30       	cpi	r24, 0x04	; 4
 c22:	09 f4       	brne	.+2      	; 0xc26 <__pack_f+0x34>
 c24:	9f c0       	rjmp	.+318    	; 0xd64 <__pack_f+0x172>
 c26:	82 30       	cpi	r24, 0x02	; 2
 c28:	21 f4       	brne	.+8      	; 0xc32 <__pack_f+0x40>
 c2a:	ee 24       	eor	r14, r14
 c2c:	ff 24       	eor	r15, r15
 c2e:	87 01       	movw	r16, r14
 c30:	05 c0       	rjmp	.+10     	; 0xc3c <__pack_f+0x4a>
 c32:	e1 14       	cp	r14, r1
 c34:	f1 04       	cpc	r15, r1
 c36:	01 05       	cpc	r16, r1
 c38:	11 05       	cpc	r17, r1
 c3a:	19 f4       	brne	.+6      	; 0xc42 <__pack_f+0x50>
 c3c:	e0 e0       	ldi	r30, 0x00	; 0
 c3e:	f0 e0       	ldi	r31, 0x00	; 0
 c40:	96 c0       	rjmp	.+300    	; 0xd6e <__pack_f+0x17c>
 c42:	62 81       	ldd	r22, Z+2	; 0x02
 c44:	73 81       	ldd	r23, Z+3	; 0x03
 c46:	9f ef       	ldi	r25, 0xFF	; 255
 c48:	62 38       	cpi	r22, 0x82	; 130
 c4a:	79 07       	cpc	r23, r25
 c4c:	0c f0       	brlt	.+2      	; 0xc50 <__pack_f+0x5e>
 c4e:	5b c0       	rjmp	.+182    	; 0xd06 <__pack_f+0x114>
 c50:	22 e8       	ldi	r18, 0x82	; 130
 c52:	3f ef       	ldi	r19, 0xFF	; 255
 c54:	26 1b       	sub	r18, r22
 c56:	37 0b       	sbc	r19, r23
 c58:	2a 31       	cpi	r18, 0x1A	; 26
 c5a:	31 05       	cpc	r19, r1
 c5c:	2c f0       	brlt	.+10     	; 0xc68 <__pack_f+0x76>
 c5e:	20 e0       	ldi	r18, 0x00	; 0
 c60:	30 e0       	ldi	r19, 0x00	; 0
 c62:	40 e0       	ldi	r20, 0x00	; 0
 c64:	50 e0       	ldi	r21, 0x00	; 0
 c66:	2a c0       	rjmp	.+84     	; 0xcbc <__pack_f+0xca>
 c68:	b8 01       	movw	r22, r16
 c6a:	a7 01       	movw	r20, r14
 c6c:	02 2e       	mov	r0, r18
 c6e:	04 c0       	rjmp	.+8      	; 0xc78 <__pack_f+0x86>
 c70:	76 95       	lsr	r23
 c72:	67 95       	ror	r22
 c74:	57 95       	ror	r21
 c76:	47 95       	ror	r20
 c78:	0a 94       	dec	r0
 c7a:	d2 f7       	brpl	.-12     	; 0xc70 <__pack_f+0x7e>
 c7c:	81 e0       	ldi	r24, 0x01	; 1
 c7e:	90 e0       	ldi	r25, 0x00	; 0
 c80:	a0 e0       	ldi	r26, 0x00	; 0
 c82:	b0 e0       	ldi	r27, 0x00	; 0
 c84:	04 c0       	rjmp	.+8      	; 0xc8e <__pack_f+0x9c>
 c86:	88 0f       	add	r24, r24
 c88:	99 1f       	adc	r25, r25
 c8a:	aa 1f       	adc	r26, r26
 c8c:	bb 1f       	adc	r27, r27
 c8e:	2a 95       	dec	r18
 c90:	d2 f7       	brpl	.-12     	; 0xc86 <__pack_f+0x94>
 c92:	01 97       	sbiw	r24, 0x01	; 1
 c94:	a1 09       	sbc	r26, r1
 c96:	b1 09       	sbc	r27, r1
 c98:	8e 21       	and	r24, r14
 c9a:	9f 21       	and	r25, r15
 c9c:	a0 23       	and	r26, r16
 c9e:	b1 23       	and	r27, r17
 ca0:	00 97       	sbiw	r24, 0x00	; 0
 ca2:	a1 05       	cpc	r26, r1
 ca4:	b1 05       	cpc	r27, r1
 ca6:	21 f0       	breq	.+8      	; 0xcb0 <__pack_f+0xbe>
 ca8:	81 e0       	ldi	r24, 0x01	; 1
 caa:	90 e0       	ldi	r25, 0x00	; 0
 cac:	a0 e0       	ldi	r26, 0x00	; 0
 cae:	b0 e0       	ldi	r27, 0x00	; 0
 cb0:	9a 01       	movw	r18, r20
 cb2:	ab 01       	movw	r20, r22
 cb4:	28 2b       	or	r18, r24
 cb6:	39 2b       	or	r19, r25
 cb8:	4a 2b       	or	r20, r26
 cba:	5b 2b       	or	r21, r27
 cbc:	da 01       	movw	r26, r20
 cbe:	c9 01       	movw	r24, r18
 cc0:	8f 77       	andi	r24, 0x7F	; 127
 cc2:	90 70       	andi	r25, 0x00	; 0
 cc4:	a0 70       	andi	r26, 0x00	; 0
 cc6:	b0 70       	andi	r27, 0x00	; 0
 cc8:	80 34       	cpi	r24, 0x40	; 64
 cca:	91 05       	cpc	r25, r1
 ccc:	a1 05       	cpc	r26, r1
 cce:	b1 05       	cpc	r27, r1
 cd0:	39 f4       	brne	.+14     	; 0xce0 <__pack_f+0xee>
 cd2:	27 ff       	sbrs	r18, 7
 cd4:	09 c0       	rjmp	.+18     	; 0xce8 <__pack_f+0xf6>
 cd6:	20 5c       	subi	r18, 0xC0	; 192
 cd8:	3f 4f       	sbci	r19, 0xFF	; 255
 cda:	4f 4f       	sbci	r20, 0xFF	; 255
 cdc:	5f 4f       	sbci	r21, 0xFF	; 255
 cde:	04 c0       	rjmp	.+8      	; 0xce8 <__pack_f+0xf6>
 ce0:	21 5c       	subi	r18, 0xC1	; 193
 ce2:	3f 4f       	sbci	r19, 0xFF	; 255
 ce4:	4f 4f       	sbci	r20, 0xFF	; 255
 ce6:	5f 4f       	sbci	r21, 0xFF	; 255
 ce8:	e0 e0       	ldi	r30, 0x00	; 0
 cea:	f0 e0       	ldi	r31, 0x00	; 0
 cec:	20 30       	cpi	r18, 0x00	; 0
 cee:	a0 e0       	ldi	r26, 0x00	; 0
 cf0:	3a 07       	cpc	r19, r26
 cf2:	a0 e0       	ldi	r26, 0x00	; 0
 cf4:	4a 07       	cpc	r20, r26
 cf6:	a0 e4       	ldi	r26, 0x40	; 64
 cf8:	5a 07       	cpc	r21, r26
 cfa:	10 f0       	brcs	.+4      	; 0xd00 <__pack_f+0x10e>
 cfc:	e1 e0       	ldi	r30, 0x01	; 1
 cfe:	f0 e0       	ldi	r31, 0x00	; 0
 d00:	79 01       	movw	r14, r18
 d02:	8a 01       	movw	r16, r20
 d04:	27 c0       	rjmp	.+78     	; 0xd54 <__pack_f+0x162>
 d06:	60 38       	cpi	r22, 0x80	; 128
 d08:	71 05       	cpc	r23, r1
 d0a:	64 f5       	brge	.+88     	; 0xd64 <__pack_f+0x172>
 d0c:	fb 01       	movw	r30, r22
 d0e:	e1 58       	subi	r30, 0x81	; 129
 d10:	ff 4f       	sbci	r31, 0xFF	; 255
 d12:	d8 01       	movw	r26, r16
 d14:	c7 01       	movw	r24, r14
 d16:	8f 77       	andi	r24, 0x7F	; 127
 d18:	90 70       	andi	r25, 0x00	; 0
 d1a:	a0 70       	andi	r26, 0x00	; 0
 d1c:	b0 70       	andi	r27, 0x00	; 0
 d1e:	80 34       	cpi	r24, 0x40	; 64
 d20:	91 05       	cpc	r25, r1
 d22:	a1 05       	cpc	r26, r1
 d24:	b1 05       	cpc	r27, r1
 d26:	39 f4       	brne	.+14     	; 0xd36 <__pack_f+0x144>
 d28:	e7 fe       	sbrs	r14, 7
 d2a:	0d c0       	rjmp	.+26     	; 0xd46 <__pack_f+0x154>
 d2c:	80 e4       	ldi	r24, 0x40	; 64
 d2e:	90 e0       	ldi	r25, 0x00	; 0
 d30:	a0 e0       	ldi	r26, 0x00	; 0
 d32:	b0 e0       	ldi	r27, 0x00	; 0
 d34:	04 c0       	rjmp	.+8      	; 0xd3e <__pack_f+0x14c>
 d36:	8f e3       	ldi	r24, 0x3F	; 63
 d38:	90 e0       	ldi	r25, 0x00	; 0
 d3a:	a0 e0       	ldi	r26, 0x00	; 0
 d3c:	b0 e0       	ldi	r27, 0x00	; 0
 d3e:	e8 0e       	add	r14, r24
 d40:	f9 1e       	adc	r15, r25
 d42:	0a 1f       	adc	r16, r26
 d44:	1b 1f       	adc	r17, r27
 d46:	17 ff       	sbrs	r17, 7
 d48:	05 c0       	rjmp	.+10     	; 0xd54 <__pack_f+0x162>
 d4a:	16 95       	lsr	r17
 d4c:	07 95       	ror	r16
 d4e:	f7 94       	ror	r15
 d50:	e7 94       	ror	r14
 d52:	31 96       	adiw	r30, 0x01	; 1
 d54:	87 e0       	ldi	r24, 0x07	; 7
 d56:	16 95       	lsr	r17
 d58:	07 95       	ror	r16
 d5a:	f7 94       	ror	r15
 d5c:	e7 94       	ror	r14
 d5e:	8a 95       	dec	r24
 d60:	d1 f7       	brne	.-12     	; 0xd56 <__pack_f+0x164>
 d62:	05 c0       	rjmp	.+10     	; 0xd6e <__pack_f+0x17c>
 d64:	ee 24       	eor	r14, r14
 d66:	ff 24       	eor	r15, r15
 d68:	87 01       	movw	r16, r14
 d6a:	ef ef       	ldi	r30, 0xFF	; 255
 d6c:	f0 e0       	ldi	r31, 0x00	; 0
 d6e:	6e 2f       	mov	r22, r30
 d70:	67 95       	ror	r22
 d72:	66 27       	eor	r22, r22
 d74:	67 95       	ror	r22
 d76:	90 2f       	mov	r25, r16
 d78:	9f 77       	andi	r25, 0x7F	; 127
 d7a:	d7 94       	ror	r13
 d7c:	dd 24       	eor	r13, r13
 d7e:	d7 94       	ror	r13
 d80:	8e 2f       	mov	r24, r30
 d82:	86 95       	lsr	r24
 d84:	49 2f       	mov	r20, r25
 d86:	46 2b       	or	r20, r22
 d88:	58 2f       	mov	r21, r24
 d8a:	5d 29       	or	r21, r13
 d8c:	b7 01       	movw	r22, r14
 d8e:	ca 01       	movw	r24, r20
 d90:	1f 91       	pop	r17
 d92:	0f 91       	pop	r16
 d94:	ff 90       	pop	r15
 d96:	ef 90       	pop	r14
 d98:	df 90       	pop	r13
 d9a:	08 95       	ret

00000d9c <__unpack_f>:
 d9c:	fc 01       	movw	r30, r24
 d9e:	db 01       	movw	r26, r22
 da0:	40 81       	ld	r20, Z
 da2:	51 81       	ldd	r21, Z+1	; 0x01
 da4:	22 81       	ldd	r18, Z+2	; 0x02
 da6:	62 2f       	mov	r22, r18
 da8:	6f 77       	andi	r22, 0x7F	; 127
 daa:	70 e0       	ldi	r23, 0x00	; 0
 dac:	22 1f       	adc	r18, r18
 dae:	22 27       	eor	r18, r18
 db0:	22 1f       	adc	r18, r18
 db2:	93 81       	ldd	r25, Z+3	; 0x03
 db4:	89 2f       	mov	r24, r25
 db6:	88 0f       	add	r24, r24
 db8:	82 2b       	or	r24, r18
 dba:	28 2f       	mov	r18, r24
 dbc:	30 e0       	ldi	r19, 0x00	; 0
 dbe:	99 1f       	adc	r25, r25
 dc0:	99 27       	eor	r25, r25
 dc2:	99 1f       	adc	r25, r25
 dc4:	11 96       	adiw	r26, 0x01	; 1
 dc6:	9c 93       	st	X, r25
 dc8:	11 97       	sbiw	r26, 0x01	; 1
 dca:	21 15       	cp	r18, r1
 dcc:	31 05       	cpc	r19, r1
 dce:	a9 f5       	brne	.+106    	; 0xe3a <__unpack_f+0x9e>
 dd0:	41 15       	cp	r20, r1
 dd2:	51 05       	cpc	r21, r1
 dd4:	61 05       	cpc	r22, r1
 dd6:	71 05       	cpc	r23, r1
 dd8:	11 f4       	brne	.+4      	; 0xdde <__unpack_f+0x42>
 dda:	82 e0       	ldi	r24, 0x02	; 2
 ddc:	37 c0       	rjmp	.+110    	; 0xe4c <__unpack_f+0xb0>
 dde:	82 e8       	ldi	r24, 0x82	; 130
 de0:	9f ef       	ldi	r25, 0xFF	; 255
 de2:	13 96       	adiw	r26, 0x03	; 3
 de4:	9c 93       	st	X, r25
 de6:	8e 93       	st	-X, r24
 de8:	12 97       	sbiw	r26, 0x02	; 2
 dea:	9a 01       	movw	r18, r20
 dec:	ab 01       	movw	r20, r22
 dee:	67 e0       	ldi	r22, 0x07	; 7
 df0:	22 0f       	add	r18, r18
 df2:	33 1f       	adc	r19, r19
 df4:	44 1f       	adc	r20, r20
 df6:	55 1f       	adc	r21, r21
 df8:	6a 95       	dec	r22
 dfa:	d1 f7       	brne	.-12     	; 0xdf0 <__unpack_f+0x54>
 dfc:	83 e0       	ldi	r24, 0x03	; 3
 dfe:	8c 93       	st	X, r24
 e00:	0d c0       	rjmp	.+26     	; 0xe1c <__unpack_f+0x80>
 e02:	22 0f       	add	r18, r18
 e04:	33 1f       	adc	r19, r19
 e06:	44 1f       	adc	r20, r20
 e08:	55 1f       	adc	r21, r21
 e0a:	12 96       	adiw	r26, 0x02	; 2
 e0c:	8d 91       	ld	r24, X+
 e0e:	9c 91       	ld	r25, X
 e10:	13 97       	sbiw	r26, 0x03	; 3
 e12:	01 97       	sbiw	r24, 0x01	; 1
 e14:	13 96       	adiw	r26, 0x03	; 3
 e16:	9c 93       	st	X, r25
 e18:	8e 93       	st	-X, r24
 e1a:	12 97       	sbiw	r26, 0x02	; 2
 e1c:	20 30       	cpi	r18, 0x00	; 0
 e1e:	80 e0       	ldi	r24, 0x00	; 0
 e20:	38 07       	cpc	r19, r24
 e22:	80 e0       	ldi	r24, 0x00	; 0
 e24:	48 07       	cpc	r20, r24
 e26:	80 e4       	ldi	r24, 0x40	; 64
 e28:	58 07       	cpc	r21, r24
 e2a:	58 f3       	brcs	.-42     	; 0xe02 <__unpack_f+0x66>
 e2c:	14 96       	adiw	r26, 0x04	; 4
 e2e:	2d 93       	st	X+, r18
 e30:	3d 93       	st	X+, r19
 e32:	4d 93       	st	X+, r20
 e34:	5c 93       	st	X, r21
 e36:	17 97       	sbiw	r26, 0x07	; 7
 e38:	08 95       	ret
 e3a:	2f 3f       	cpi	r18, 0xFF	; 255
 e3c:	31 05       	cpc	r19, r1
 e3e:	79 f4       	brne	.+30     	; 0xe5e <__unpack_f+0xc2>
 e40:	41 15       	cp	r20, r1
 e42:	51 05       	cpc	r21, r1
 e44:	61 05       	cpc	r22, r1
 e46:	71 05       	cpc	r23, r1
 e48:	19 f4       	brne	.+6      	; 0xe50 <__unpack_f+0xb4>
 e4a:	84 e0       	ldi	r24, 0x04	; 4
 e4c:	8c 93       	st	X, r24
 e4e:	08 95       	ret
 e50:	64 ff       	sbrs	r22, 4
 e52:	03 c0       	rjmp	.+6      	; 0xe5a <__unpack_f+0xbe>
 e54:	81 e0       	ldi	r24, 0x01	; 1
 e56:	8c 93       	st	X, r24
 e58:	12 c0       	rjmp	.+36     	; 0xe7e <__unpack_f+0xe2>
 e5a:	1c 92       	st	X, r1
 e5c:	10 c0       	rjmp	.+32     	; 0xe7e <__unpack_f+0xe2>
 e5e:	2f 57       	subi	r18, 0x7F	; 127
 e60:	30 40       	sbci	r19, 0x00	; 0
 e62:	13 96       	adiw	r26, 0x03	; 3
 e64:	3c 93       	st	X, r19
 e66:	2e 93       	st	-X, r18
 e68:	12 97       	sbiw	r26, 0x02	; 2
 e6a:	83 e0       	ldi	r24, 0x03	; 3
 e6c:	8c 93       	st	X, r24
 e6e:	87 e0       	ldi	r24, 0x07	; 7
 e70:	44 0f       	add	r20, r20
 e72:	55 1f       	adc	r21, r21
 e74:	66 1f       	adc	r22, r22
 e76:	77 1f       	adc	r23, r23
 e78:	8a 95       	dec	r24
 e7a:	d1 f7       	brne	.-12     	; 0xe70 <__unpack_f+0xd4>
 e7c:	70 64       	ori	r23, 0x40	; 64
 e7e:	14 96       	adiw	r26, 0x04	; 4
 e80:	4d 93       	st	X+, r20
 e82:	5d 93       	st	X+, r21
 e84:	6d 93       	st	X+, r22
 e86:	7c 93       	st	X, r23
 e88:	17 97       	sbiw	r26, 0x07	; 7
 e8a:	08 95       	ret

00000e8c <__fpcmp_parts_f>:
 e8c:	1f 93       	push	r17
 e8e:	dc 01       	movw	r26, r24
 e90:	fb 01       	movw	r30, r22
 e92:	9c 91       	ld	r25, X
 e94:	92 30       	cpi	r25, 0x02	; 2
 e96:	08 f4       	brcc	.+2      	; 0xe9a <__fpcmp_parts_f+0xe>
 e98:	47 c0       	rjmp	.+142    	; 0xf28 <__fpcmp_parts_f+0x9c>
 e9a:	80 81       	ld	r24, Z
 e9c:	82 30       	cpi	r24, 0x02	; 2
 e9e:	08 f4       	brcc	.+2      	; 0xea2 <__fpcmp_parts_f+0x16>
 ea0:	43 c0       	rjmp	.+134    	; 0xf28 <__fpcmp_parts_f+0x9c>
 ea2:	94 30       	cpi	r25, 0x04	; 4
 ea4:	51 f4       	brne	.+20     	; 0xeba <__fpcmp_parts_f+0x2e>
 ea6:	11 96       	adiw	r26, 0x01	; 1
 ea8:	1c 91       	ld	r17, X
 eaa:	84 30       	cpi	r24, 0x04	; 4
 eac:	99 f5       	brne	.+102    	; 0xf14 <__fpcmp_parts_f+0x88>
 eae:	81 81       	ldd	r24, Z+1	; 0x01
 eb0:	68 2f       	mov	r22, r24
 eb2:	70 e0       	ldi	r23, 0x00	; 0
 eb4:	61 1b       	sub	r22, r17
 eb6:	71 09       	sbc	r23, r1
 eb8:	3f c0       	rjmp	.+126    	; 0xf38 <__fpcmp_parts_f+0xac>
 eba:	84 30       	cpi	r24, 0x04	; 4
 ebc:	21 f0       	breq	.+8      	; 0xec6 <__fpcmp_parts_f+0x3a>
 ebe:	92 30       	cpi	r25, 0x02	; 2
 ec0:	31 f4       	brne	.+12     	; 0xece <__fpcmp_parts_f+0x42>
 ec2:	82 30       	cpi	r24, 0x02	; 2
 ec4:	b9 f1       	breq	.+110    	; 0xf34 <__fpcmp_parts_f+0xa8>
 ec6:	81 81       	ldd	r24, Z+1	; 0x01
 ec8:	88 23       	and	r24, r24
 eca:	89 f1       	breq	.+98     	; 0xf2e <__fpcmp_parts_f+0xa2>
 ecc:	2d c0       	rjmp	.+90     	; 0xf28 <__fpcmp_parts_f+0x9c>
 ece:	11 96       	adiw	r26, 0x01	; 1
 ed0:	1c 91       	ld	r17, X
 ed2:	11 97       	sbiw	r26, 0x01	; 1
 ed4:	82 30       	cpi	r24, 0x02	; 2
 ed6:	f1 f0       	breq	.+60     	; 0xf14 <__fpcmp_parts_f+0x88>
 ed8:	81 81       	ldd	r24, Z+1	; 0x01
 eda:	18 17       	cp	r17, r24
 edc:	d9 f4       	brne	.+54     	; 0xf14 <__fpcmp_parts_f+0x88>
 ede:	12 96       	adiw	r26, 0x02	; 2
 ee0:	2d 91       	ld	r18, X+
 ee2:	3c 91       	ld	r19, X
 ee4:	13 97       	sbiw	r26, 0x03	; 3
 ee6:	82 81       	ldd	r24, Z+2	; 0x02
 ee8:	93 81       	ldd	r25, Z+3	; 0x03
 eea:	82 17       	cp	r24, r18
 eec:	93 07       	cpc	r25, r19
 eee:	94 f0       	brlt	.+36     	; 0xf14 <__fpcmp_parts_f+0x88>
 ef0:	28 17       	cp	r18, r24
 ef2:	39 07       	cpc	r19, r25
 ef4:	bc f0       	brlt	.+46     	; 0xf24 <__fpcmp_parts_f+0x98>
 ef6:	14 96       	adiw	r26, 0x04	; 4
 ef8:	8d 91       	ld	r24, X+
 efa:	9d 91       	ld	r25, X+
 efc:	0d 90       	ld	r0, X+
 efe:	bc 91       	ld	r27, X
 f00:	a0 2d       	mov	r26, r0
 f02:	24 81       	ldd	r18, Z+4	; 0x04
 f04:	35 81       	ldd	r19, Z+5	; 0x05
 f06:	46 81       	ldd	r20, Z+6	; 0x06
 f08:	57 81       	ldd	r21, Z+7	; 0x07
 f0a:	28 17       	cp	r18, r24
 f0c:	39 07       	cpc	r19, r25
 f0e:	4a 07       	cpc	r20, r26
 f10:	5b 07       	cpc	r21, r27
 f12:	18 f4       	brcc	.+6      	; 0xf1a <__fpcmp_parts_f+0x8e>
 f14:	11 23       	and	r17, r17
 f16:	41 f0       	breq	.+16     	; 0xf28 <__fpcmp_parts_f+0x9c>
 f18:	0a c0       	rjmp	.+20     	; 0xf2e <__fpcmp_parts_f+0xa2>
 f1a:	82 17       	cp	r24, r18
 f1c:	93 07       	cpc	r25, r19
 f1e:	a4 07       	cpc	r26, r20
 f20:	b5 07       	cpc	r27, r21
 f22:	40 f4       	brcc	.+16     	; 0xf34 <__fpcmp_parts_f+0xa8>
 f24:	11 23       	and	r17, r17
 f26:	19 f0       	breq	.+6      	; 0xf2e <__fpcmp_parts_f+0xa2>
 f28:	61 e0       	ldi	r22, 0x01	; 1
 f2a:	70 e0       	ldi	r23, 0x00	; 0
 f2c:	05 c0       	rjmp	.+10     	; 0xf38 <__fpcmp_parts_f+0xac>
 f2e:	6f ef       	ldi	r22, 0xFF	; 255
 f30:	7f ef       	ldi	r23, 0xFF	; 255
 f32:	02 c0       	rjmp	.+4      	; 0xf38 <__fpcmp_parts_f+0xac>
 f34:	60 e0       	ldi	r22, 0x00	; 0
 f36:	70 e0       	ldi	r23, 0x00	; 0
 f38:	cb 01       	movw	r24, r22
 f3a:	1f 91       	pop	r17
 f3c:	08 95       	ret

00000f3e <__prologue_saves__>:
 f3e:	2f 92       	push	r2
 f40:	3f 92       	push	r3
 f42:	4f 92       	push	r4
 f44:	5f 92       	push	r5
 f46:	6f 92       	push	r6
 f48:	7f 92       	push	r7
 f4a:	8f 92       	push	r8
 f4c:	9f 92       	push	r9
 f4e:	af 92       	push	r10
 f50:	bf 92       	push	r11
 f52:	cf 92       	push	r12
 f54:	df 92       	push	r13
 f56:	ef 92       	push	r14
 f58:	ff 92       	push	r15
 f5a:	0f 93       	push	r16
 f5c:	1f 93       	push	r17
 f5e:	cf 93       	push	r28
 f60:	df 93       	push	r29
 f62:	cd b7       	in	r28, 0x3d	; 61
 f64:	de b7       	in	r29, 0x3e	; 62
 f66:	ca 1b       	sub	r28, r26
 f68:	db 0b       	sbc	r29, r27
 f6a:	0f b6       	in	r0, 0x3f	; 63
 f6c:	f8 94       	cli
 f6e:	de bf       	out	0x3e, r29	; 62
 f70:	0f be       	out	0x3f, r0	; 63
 f72:	cd bf       	out	0x3d, r28	; 61
 f74:	09 94       	ijmp

00000f76 <__epilogue_restores__>:
 f76:	2a 88       	ldd	r2, Y+18	; 0x12
 f78:	39 88       	ldd	r3, Y+17	; 0x11
 f7a:	48 88       	ldd	r4, Y+16	; 0x10
 f7c:	5f 84       	ldd	r5, Y+15	; 0x0f
 f7e:	6e 84       	ldd	r6, Y+14	; 0x0e
 f80:	7d 84       	ldd	r7, Y+13	; 0x0d
 f82:	8c 84       	ldd	r8, Y+12	; 0x0c
 f84:	9b 84       	ldd	r9, Y+11	; 0x0b
 f86:	aa 84       	ldd	r10, Y+10	; 0x0a
 f88:	b9 84       	ldd	r11, Y+9	; 0x09
 f8a:	c8 84       	ldd	r12, Y+8	; 0x08
 f8c:	df 80       	ldd	r13, Y+7	; 0x07
 f8e:	ee 80       	ldd	r14, Y+6	; 0x06
 f90:	fd 80       	ldd	r15, Y+5	; 0x05
 f92:	0c 81       	ldd	r16, Y+4	; 0x04
 f94:	1b 81       	ldd	r17, Y+3	; 0x03
 f96:	aa 81       	ldd	r26, Y+2	; 0x02
 f98:	b9 81       	ldd	r27, Y+1	; 0x01
 f9a:	ce 0f       	add	r28, r30
 f9c:	d1 1d       	adc	r29, r1
 f9e:	0f b6       	in	r0, 0x3f	; 63
 fa0:	f8 94       	cli
 fa2:	de bf       	out	0x3e, r29	; 62
 fa4:	0f be       	out	0x3f, r0	; 63
 fa6:	cd bf       	out	0x3d, r28	; 61
 fa8:	ed 01       	movw	r28, r26
 faa:	08 95       	ret

00000fac <_exit>:
 fac:	f8 94       	cli

00000fae <__stop_program>:
 fae:	ff cf       	rjmp	.-2      	; 0xfae <__stop_program>
